{
    "Data": [
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "breaking-changes",
                "Date": "5/4/2017"
            },
            "Features": {}
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.67",
                "Date": "12/08/2017"
            },
            "Features": {}
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.68",
                "Date": "12/14/2017\n"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>Fixed an issue with the <code>Incrementation Config</code> on object <code>PATCH</code></li>\n<li>Fixed an issue where an <code>Anonymous User</code> would lose access to an order if an <code>Admin User</code> changed that order.</li>\n</ul>",
                    "<li>Fixed an issue with the <code>Incrementation Config</code> on object <code>PATCH</code></li>",
                    "<code>Incrementation Config</code>",
                    "<code>PATCH</code>",
                    "<li>Fixed an issue where an <code>Anonymous User</code> would lose access to an order if an <code>Admin User</code> changed that order.</li>",
                    "<code>Anonymous User</code>",
                    "<code>Admin User</code>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.69",
                "Date": "2018-01-15"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>\n<p>Previously, we had some inconsistent logic about when we evaluated <a href=\"https://documentation.ordercloud.io/api-reference#Promotions\">Promotions</a> on an order. Sometimes, this would lead to a submitted order suddenly having an invalid promotion, potentially changing the order total. \nAs we want to allow a historical record of promotions at the time of order submit, we have now limited promotion evaluation to only orders whose statuses are <strong>unsubmitted</strong> or <strong>awaiting approval</strong>.</p>\n</li>\n<li>\n<p>We also fixed a bug around <a href=\"{filename}../OrderCloud-Blogs/rules-engine.md\">the rules engine</a> for  <a href=\"https://documentation.ordercloud.io/api-reference#ApprovalRules\">Order Approvals</a>. If a User is in the approving group for an approval rule, any order submitted by that User that meets the approval rule should be auto-approved. Or, stated another way, because the User is an Approving User, their order does not need separate approval.</p>\n</li>\n</ul>",
                    "<li>\n<p>Previously, we had some inconsistent logic about when we evaluated <a href=\"https://documentation.ordercloud.io/api-reference#Promotions\">Promotions</a> on an order. Sometimes, this would lead to a submitted order suddenly having an invalid promotion, potentially changing the order total. \nAs we want to allow a historical record of promotions at the time of order submit, we have now limited promotion evaluation to only orders whose statuses are <strong>unsubmitted</strong> or <strong>awaiting approval</strong>.</p>\n</li>",
                    "<p>Previously, we had some inconsistent logic about when we evaluated <a href=\"https://documentation.ordercloud.io/api-reference#Promotions\">Promotions</a> on an order. Sometimes, this would lead to a submitted order suddenly having an invalid promotion, potentially changing the order total. \nAs we want to allow a historical record of promotions at the time of order submit, we have now limited promotion evaluation to only orders whose statuses are <strong>unsubmitted</strong> or <strong>awaiting approval</strong>.</p>",
                    "<a href=\"https://documentation.ordercloud.io/api-reference#Promotions\">Promotions</a>",
                    "<strong>unsubmitted</strong>",
                    "<strong>awaiting approval</strong>",
                    "<li>\n<p>We also fixed a bug around <a href=\"{filename}../OrderCloud-Blogs/rules-engine.md\">the rules engine</a> for  <a href=\"https://documentation.ordercloud.io/api-reference#ApprovalRules\">Order Approvals</a>. If a User is in the approving group for an approval rule, any order submitted by that User that meets the approval rule should be auto-approved. Or, stated another way, because the User is an Approving User, their order does not need separate approval.</p>\n</li>",
                    "<p>We also fixed a bug around <a href=\"{filename}../OrderCloud-Blogs/rules-engine.md\">the rules engine</a> for  <a href=\"https://documentation.ordercloud.io/api-reference#ApprovalRules\">Order Approvals</a>. If a User is in the approving group for an approval rule, any order submitted by that User that meets the approval rule should be auto-approved. Or, stated another way, because the User is an Approving User, their order does not need separate approval.</p>",
                    "<a href=\"{filename}../OrderCloud-Blogs/rules-engine.md\">the rules engine</a>",
                    "<a href=\"https://documentation.ordercloud.io/api-reference#ApprovalRules\">Order Approvals</a>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.70",
                "Date": "2018-02-13\n"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>You can no longer accidentally delete a buyer's default catalog! If you attempt to delete a catalog that happens to be the default catalog for one or more buyers, you'll get an error and a list of buyers.</li>\n</ul>",
                    "<li>You can no longer accidentally delete a buyer's default catalog! If you attempt to delete a catalog that happens to be the default catalog for one or more buyers, you'll get an error and a list of buyers.</li>",
                    "<h2>Bug Fixes</h2>",
                    "<ul>\n<li>Fixed some character lengths around DevCenter User's Account information. Everything should now politely error should you attempt to insert a small poem rather than your company name.</li>\n<li>We've also improved some of the error handling around object creation with bad datetime strings.</li>\n<li>Minor error handling improvements around attempts at URL unfriendly object IDs.</li>\n<li>We've made some enhancements around our indexing performance.</li>\n</ul>",
                    "<li>Fixed some character lengths around DevCenter User's Account information. Everything should now politely error should you attempt to insert a small poem rather than your company name.</li>",
                    "<li>We've also improved some of the error handling around object creation with bad datetime strings.</li>",
                    "<li>Minor error handling improvements around attempts at URL unfriendly object IDs.</li>",
                    "<li>We've made some enhancements around our indexing performance.</li>"
                ],
                "Bug Fixes": [
                    "<ul>\n<li>Fixed some character lengths around DevCenter User's Account information. Everything should now politely error should you attempt to insert a small poem rather than your company name.</li>\n<li>We've also improved some of the error handling around object creation with bad datetime strings.</li>\n<li>Minor error handling improvements around attempts at URL unfriendly object IDs.</li>\n<li>We've made some enhancements around our indexing performance.</li>\n</ul>",
                    "<li>Fixed some character lengths around DevCenter User's Account information. Everything should now politely error should you attempt to insert a small poem rather than your company name.</li>",
                    "<li>We've also improved some of the error handling around object creation with bad datetime strings.</li>",
                    "<li>Minor error handling improvements around attempts at URL unfriendly object IDs.</li>",
                    "<li>We've made some enhancements around our indexing performance.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.71",
                "Date": "2018-03-01\n"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>We fixed an issue where Admin Address XP were not being correctly indexed retroactively.</li>\n<li>We fixed an issue with filtering a list of Products by the <code>SpecCount</code> field -- the list will now be correctly returned if the <code>SpecCount</code> is 0.</li>\n<li>We have solved an issue with Spending Accounts where duplicate Redemption Codes could be created on different Spending Accounts in the same Buyer. Now Spending Accounts cannot be made with any Redemption Code that is already in use within the Buyer. (Don't worry about existing applications you may have; there were no dupes in our databases at time of the fix.)</li>\n</ul>",
                    "<li>We fixed an issue where Admin Address XP were not being correctly indexed retroactively.</li>",
                    "<li>We fixed an issue with filtering a list of Products by the <code>SpecCount</code> field -- the list will now be correctly returned if the <code>SpecCount</code> is 0.</li>",
                    "<code>SpecCount</code>",
                    "<code>SpecCount</code>",
                    "<li>We have solved an issue with Spending Accounts where duplicate Redemption Codes could be created on different Spending Accounts in the same Buyer. Now Spending Accounts cannot be made with any Redemption Code that is already in use within the Buyer. (Don't worry about existing applications you may have; there were no dupes in our databases at time of the fix.)</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.72",
                "Date": "2018-03-14\n"
            },
            "Features": {
                "New Features": [
                    "<p>Previously, if you filtered a list by an xp, it only cared about items in that list that had that xp. This meant that negative filters, such as <code>xp.Color=!Blue</code>, for example, would only return other items <em>with</em> <code>xp.Color</code> but where <code>xp.Color</code> was not blue. If an item didn't have <code>xp.Color</code> at all, it would not be returned in the filtered list.</p>",
                    "<code>xp.Color=!Blue</code>",
                    "<em>with</em>",
                    "<code>xp.Color</code>",
                    "<code>xp.Color</code>",
                    "<code>xp.Color</code>",
                    "<p>Now, xp filters don't just look for the specified xp and filter down from there. Instead, a filter of <code>xp.Color=!Blue</code> will return all items with <code>xp.Color</code> where the color isn't blue, <em>but also</em> any items without <code>xp.Color</code> at all.</p>",
                    "<code>xp.Color=!Blue</code>",
                    "<code>xp.Color</code>",
                    "<em>but also</em>",
                    "<code>xp.Color</code>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.73",
                "Date": "2018-03-21\n"
            },
            "Features": {}
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.74",
                "Date": "2018-04-02\n"
            },
            "Features": {}
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.75",
                "Date": "2018-04-30\n"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>Fixed a very specific issue in Me Product listing. Previously, if you were getting a list of ME products with a <code>categoryID</code> AND <code>depth=1</code> AND an <code>xp</code> filter, it would throw an error. This is now fixed.</li>\n</ul>",
                    "<li>Fixed a very specific issue in Me Product listing. Previously, if you were getting a list of ME products with a <code>categoryID</code> AND <code>depth=1</code> AND an <code>xp</code> filter, it would throw an error. This is now fixed.</li>",
                    "<code>categoryID</code>",
                    "<code>depth=1</code>",
                    "<code>xp</code>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.76",
                "Date": "2018-05-04\n"
            },
            "Features": {
                "Features": [
                    "<ul>\n<li>Release consisted of a performance improvement around Spec Assignment listing.</li>\n</ul>",
                    "<li>Release consisted of a performance improvement around Spec Assignment listing.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.77",
                "Date": "2018-05-31\n"
            },
            "Features": {}
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.79",
                "Date": "2018-06-26\n"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>\n<p>Release contains a bug fix addressing an admin-visibility issue with buyer user private credit card objects. </p>\n</li>\n<li>\n<p>If a buyer user created a credit card that only they can access, and then used that card in a payment on an order, admin users were unable to update the payment at all. Instead, the API would respond with a 404 not found error, because the admin user did not have visibility into that private credit card. This is a particular problem as admin users are generally the ones to update a payment's <code>accepted</code> bool to true once a card payment clears. </p>\n</li>\n<li>\n<p>This is now fixed. While an admin user cannot get or otherwise retrieve the buyer user's private card object, the admin user is now able to update the payment that references the private card. </p>\n</li>\n</ul>",
                    "<li>\n<p>Release contains a bug fix addressing an admin-visibility issue with buyer user private credit card objects. </p>\n</li>",
                    "<p>Release contains a bug fix addressing an admin-visibility issue with buyer user private credit card objects. </p>",
                    "<li>\n<p>If a buyer user created a credit card that only they can access, and then used that card in a payment on an order, admin users were unable to update the payment at all. Instead, the API would respond with a 404 not found error, because the admin user did not have visibility into that private credit card. This is a particular problem as admin users are generally the ones to update a payment's <code>accepted</code> bool to true once a card payment clears. </p>\n</li>",
                    "<p>If a buyer user created a credit card that only they can access, and then used that card in a payment on an order, admin users were unable to update the payment at all. Instead, the API would respond with a 404 not found error, because the admin user did not have visibility into that private credit card. This is a particular problem as admin users are generally the ones to update a payment's <code>accepted</code> bool to true once a card payment clears. </p>",
                    "<code>accepted</code>",
                    "<li>\n<p>This is now fixed. While an admin user cannot get or otherwise retrieve the buyer user's private card object, the admin user is now able to update the payment that references the private card. </p>\n</li>",
                    "<p>This is now fixed. While an admin user cannot get or otherwise retrieve the buyer user's private card object, the admin user is now able to update the payment that references the private card. </p>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.80",
                "Date": "2018-07-10\n"
            },
            "Features": {
                "New Features": [
                    "<p>Previously, if you added a promo to an order, just the promo model would get returned:</p>",
                    "<p><code>POST</code> <code>v1/orders</code>/</p>",
                    "<code>POST</code>",
                    "<code>v1/orders</code>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "In API 1.0.12, OrderCloud Platform added variant generation, and the ability to use multiple Payment types on an Order.",
                "Released to Production": "2016-03-03 20:00 CDT",
                "Breaking Changes": true,
                "Version Number": "v1.0.12.0",
                "Date": "3/3/2016"
            },
            "Features": {
                "New Features:": [
                    "<ul>\n<li><strong>Payment Types</strong> allow using multiple payment types on a single order</li>\n<li><a href=\"#generating-variants\"><strong>Generate Variants</strong></a></li>\n</ul>",
                    "<li><strong>Payment Types</strong> allow using multiple payment types on a single order</li>",
                    "<strong>Payment Types</strong>",
                    "<li><a href=\"#generating-variants\"><strong>Generate Variants</strong></a></li>",
                    "<a href=\"#generating-variants\"><strong>Generate Variants</strong></a>",
                    "<strong>Generate Variants</strong>",
                    "<h2>Breaking Changes:</h2>",
                    "<ul>\n<li>DefinesVariant has been moved from the Spec model to the Product-Spec Assignment model</li>\n</ul>",
                    "<li>DefinesVariant has been moved from the Spec model to the Product-Spec Assignment model</li>",
                    "<h4>Generating Variants</h4>",
                    "<p>There are 4 things needed to create a product with variants\nSpec(s)\nSpec options\na spec product relationship that sets Defines variant = true\nan explicit call to \n<code>POST {productID}/variants/generate</code></p>",
                    "<code>POST {productID}/variants/generate</code>",
                    "<p>it's pretty simple once they're initally set up. Take the ubiquitous shirt example\nSpecs \n<em>size small, large</em>\n<em>color red, black</em></p>",
                    "<em>size small, large</em>",
                    "<em>color red, black</em>",
                    "<p>spec - product = size/shirt/definesvariant = true\nspec - product = color/shirt/definesvariant = true</p>",
                    "<p>a call to POST\n<code>{productID}/variants/generate</code>\nwill generate 4 variants\n- small red\n- small black\n- large red\n- large black</p>",
                    "<code>{productID}/variants/generate</code>",
                    "<p>Adding specs is pretty simple\nadd color:blue\nand a call to \n<code>POST {productID}/variants/generate</code>\nwill ADD the missing variants \n1   small blue\n2   large blue</p>",
                    "<code>POST {productID}/variants/generate</code>",
                    "<p>The tricky bit starts when a spec is removed. if color is deleted, all the varaints are not relevant because color is built into all of them. Delete color and add logo to our shirt. So that this is the config of shirt:\n    size: small,large\n    logo:   logoA,logoB</p>",
                    "<p>and a call to \n<code>POST {productID}/variants/generate</code>\nwill only ADD new variants and you'll have 8. Even with the spec deleted, the dependant variant can still exist, it's just not tied to the deleted spec. This is important if that variant is already on an order.\n- small logoA\n- small logoB\n- large logoA\n- large logoB\n- small red\n- small black\n- large red\n- large black</p>",
                    "<code>POST {productID}/variants/generate</code>",
                    "<p>if your intention is to start over and reset the variants, there is the spec nuclear option:</p>",
                    "<p><code>POST {productID}/variants/generate?overwriteExisting=true</code></p>",
                    "<code>POST {productID}/variants/generate?overwriteExisting=true</code>",
                    "<p>This will DELETE ALL variants and regenerate them based on the current spec configurations. If a variant is on a lineitem, it will be removed. The previous example deletes color and adds logo. calling overwriteExisting=true will result in \n- small logoA\n- small logoB\n- large logoA\n- large logoB</p>",
                    "<p>The key to overwriteExisting=true is that it will always delete all variaints and regenerate regardless of the change to the spec configuration.</p>"
                ],
                "Breaking Changes:": [
                    "<ul>\n<li>DefinesVariant has been moved from the Spec model to the Product-Spec Assignment model</li>\n</ul>",
                    "<li>DefinesVariant has been moved from the Spec model to the Product-Spec Assignment model</li>",
                    "<h4>Generating Variants</h4>",
                    "<p>There are 4 things needed to create a product with variants\nSpec(s)\nSpec options\na spec product relationship that sets Defines variant = true\nan explicit call to \n<code>POST {productID}/variants/generate</code></p>",
                    "<code>POST {productID}/variants/generate</code>",
                    "<p>it's pretty simple once they're initally set up. Take the ubiquitous shirt example\nSpecs \n<em>size small, large</em>\n<em>color red, black</em></p>",
                    "<em>size small, large</em>",
                    "<em>color red, black</em>",
                    "<p>spec - product = size/shirt/definesvariant = true\nspec - product = color/shirt/definesvariant = true</p>",
                    "<p>a call to POST\n<code>{productID}/variants/generate</code>\nwill generate 4 variants\n- small red\n- small black\n- large red\n- large black</p>",
                    "<code>{productID}/variants/generate</code>",
                    "<p>Adding specs is pretty simple\nadd color:blue\nand a call to \n<code>POST {productID}/variants/generate</code>\nwill ADD the missing variants \n1   small blue\n2   large blue</p>",
                    "<code>POST {productID}/variants/generate</code>",
                    "<p>The tricky bit starts when a spec is removed. if color is deleted, all the varaints are not relevant because color is built into all of them. Delete color and add logo to our shirt. So that this is the config of shirt:\n    size: small,large\n    logo:   logoA,logoB</p>",
                    "<p>and a call to \n<code>POST {productID}/variants/generate</code>\nwill only ADD new variants and you'll have 8. Even with the spec deleted, the dependant variant can still exist, it's just not tied to the deleted spec. This is important if that variant is already on an order.\n- small logoA\n- small logoB\n- large logoA\n- large logoB\n- small red\n- small black\n- large red\n- large black</p>",
                    "<code>POST {productID}/variants/generate</code>",
                    "<p>if your intention is to start over and reset the variants, there is the spec nuclear option:</p>",
                    "<p><code>POST {productID}/variants/generate?overwriteExisting=true</code></p>",
                    "<code>POST {productID}/variants/generate?overwriteExisting=true</code>",
                    "<p>This will DELETE ALL variants and regenerate them based on the current spec configurations. If a variant is on a lineitem, it will be removed. The previous example deletes color and adds logo. calling overwriteExisting=true will result in \n- small logoA\n- small logoB\n- large logoA\n- large logoB</p>",
                    "<p>The key to overwriteExisting=true is that it will always delete all variaints and regenerate regardless of the change to the spec configuration.</p>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.13.0",
                "Date": "3/16/2016"
            },
            "Features": {
                "Bug Fixes:": [
                    "<ul>\n<li>Payments: Unable to create, states order is already fully paid</li>\n<li>Products: Generating variants throws 500 error</li>\n<li>CostCenterID cannot be set on an ApprovalRule</li>\n<li>Specs: After variants are generated for a product, the <code>definesVariant</code> is set to false</li>\n</ul>",
                    "<li>Payments: Unable to create, states order is already fully paid</li>",
                    "<li>Products: Generating variants throws 500 error</li>",
                    "<li>CostCenterID cannot be set on an ApprovalRule</li>",
                    "<li>Specs: After variants are generated for a product, the <code>definesVariant</code> is set to false</li>",
                    "<code>definesVariant</code>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.14.0",
                "Date": "4/5/2016"
            },
            "Features": {
                "Changelog": [
                    "<ul>\n<li>We've added some new functionality around how we store credit card and other payment transactions. If your app uses our credit card processing, you'll probably want to check out the <a href=\"https://devcenter.ordercloud.io/docs#Payments\">documentation</a> on Payments, and make sure everything is working the way you expect.</li>\n<li>You can now use partial updates ( <code>PATCH</code> calls) to update fields on any model to NULL instead of having to overwrite with some other value!</li>\n<li>We've changed how you can check if all the line items on an Order are being shipped to the same place. While you could previously set all the line items on an order to the same address by writing to <code>Order.ShippingAddressID</code> , the value was write-only. Now <code>Order.ShippingAddressID</code>  will return a non-null value if and only if all the line items on that order have the same shipping address. Check out the <a href=\"https://devcenter.ordercloud.io/docs#Orders_Update\">documentation</a> for more on this.</li>\n<li>To go along with the above, if Order.ShippingAddressID is non-null (that is, all the line items are being shipped to the same place), newly added line items will inherit that shipping address. </li>\n<li>Some performance improvements were made around working with line-items. If your app has a lot of <code>PATCH</code>ing  of line items, you'll hopefully notice those improvements.</li>\n</ul>",
                    "<li>We've added some new functionality around how we store credit card and other payment transactions. If your app uses our credit card processing, you'll probably want to check out the <a href=\"https://devcenter.ordercloud.io/docs#Payments\">documentation</a> on Payments, and make sure everything is working the way you expect.</li>",
                    "<a href=\"https://devcenter.ordercloud.io/docs#Payments\">documentation</a>",
                    "<li>You can now use partial updates ( <code>PATCH</code> calls) to update fields on any model to NULL instead of having to overwrite with some other value!</li>",
                    "<code>PATCH</code>",
                    "<li>We've changed how you can check if all the line items on an Order are being shipped to the same place. While you could previously set all the line items on an order to the same address by writing to <code>Order.ShippingAddressID</code> , the value was write-only. Now <code>Order.ShippingAddressID</code>  will return a non-null value if and only if all the line items on that order have the same shipping address. Check out the <a href=\"https://devcenter.ordercloud.io/docs#Orders_Update\">documentation</a> for more on this.</li>",
                    "<code>Order.ShippingAddressID</code>",
                    "<code>Order.ShippingAddressID</code>",
                    "<a href=\"https://devcenter.ordercloud.io/docs#Orders_Update\">documentation</a>",
                    "<li>To go along with the above, if Order.ShippingAddressID is non-null (that is, all the line items are being shipped to the same place), newly added line items will inherit that shipping address. </li>",
                    "<li>Some performance improvements were made around working with line-items. If your app has a lot of <code>PATCH</code>ing  of line items, you'll hopefully notice those improvements.</li>",
                    "<code>PATCH</code>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.14.1",
                "Date": "4/11/2016"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>Duplicate error when creating categories in different buyers</li>\n</ul>",
                    "<li>Duplicate error when creating categories in different buyers</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.15.0",
                "Date": "4/15/2016"
            },
            "Features": {
                "Changelog": [
                    "<ul>\n<li>We've fixed a bug where, if you <a href=\"https://devcenter.ordercloud.io/docs#XP\">searched a list</a> on XP, you sometimes got duplicate results.</li>\n<li>We've fixed a bug where, if you are an Admin User, you couldn't update the line items on an order for a Buyer User. This is an uncommon scenario, as generally an Admin user would impersonate a Buyer User to make an order on behalf of the Buyer user, but some integrations use an Admin User directly.</li>\n</ul>",
                    "<li>We've fixed a bug where, if you <a href=\"https://devcenter.ordercloud.io/docs#XP\">searched a list</a> on XP, you sometimes got duplicate results.</li>",
                    "<a href=\"https://devcenter.ordercloud.io/docs#XP\">searched a list</a>",
                    "<li>We've fixed a bug where, if you are an Admin User, you couldn't update the line items on an order for a Buyer User. This is an uncommon scenario, as generally an Admin user would impersonate a Buyer User to make an order on behalf of the Buyer user, but some integrations use an Admin User directly.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.16.0",
                "Date": "5/4/2016"
            },
            "Features": {
                "Changelog": [
                    "<ul>\n<li>Buyer users can now can get a list of the products assigned to themselves. This used to require multiple API calls.This is now a single call.</li>\n<li>There is now the ability to list security profiles in the API itself and not just in DevCenter (as before).</li>\n<li>When logged in as a buyer user you can now list their assigned security profiles</li>\n<li>There is now the ability to create personal addresses (billing and shipping) outside the organization.</li>\n<li>There is now the ability to create a personal list of saved credit cards outside the organization. Users can now add, update, and delete personal credit cards.</li>\n<li>Shipment XP - XP can now be used on Shipments</li>\n<li>Address XP - XP can now be used on Addresses.</li>\n<li>API Client XP - XP can now be used on a client organization.</li>\n<li>There are now more advanced search and filtering capabilities available on Addresses, Credit Cards, Specs, and Buyer Categories. This new search capability allows for more advanced filtering and fuzzy searches on lists. Take a look at the new, searchable attributes here: https://testdevcenter.ordercloud.io/docs#Categories_List </li>\n<li>The API has been updated to allow for Anonymous Shopping within the OrderCloud platform. This update allows for much more flexibility in the buyer user workflow. In the past, buyer users had to be registered in order to purchase products. Now, they can go through the entire shopping workflow without signing in.</li>\n<li>Spec Options can now be designated as the Default Spec Option for a Spec.</li>\n<li>There is now the ability to create registration off of a temp user. A user can start with a temp user session and when they choose to profile themselves, a new user based on the template is created.</li>\n<li>Temp users can create an order but nothing else on Me. It is now impossible for a temp user to create Me data outside of an order.</li>\n<li>A <code>SpecCount</code> can now be shown to designate how many options are set up for a particular Spec.</li>\n<li>The Docs section of Devcenter has been reorganized to better reflect how people are actually using the API.</li>\n<li>We fixed a bug so that users can now filter on XP in the /me endpoint lists.</li>\n<li>Multiple bug fixes were also included in this release.</li>\n</ul>",
                    "<li>Buyer users can now can get a list of the products assigned to themselves. This used to require multiple API calls.This is now a single call.</li>",
                    "<li>There is now the ability to list security profiles in the API itself and not just in DevCenter (as before).</li>",
                    "<li>When logged in as a buyer user you can now list their assigned security profiles</li>",
                    "<li>There is now the ability to create personal addresses (billing and shipping) outside the organization.</li>",
                    "<li>There is now the ability to create a personal list of saved credit cards outside the organization. Users can now add, update, and delete personal credit cards.</li>",
                    "<li>Shipment XP - XP can now be used on Shipments</li>",
                    "<li>Address XP - XP can now be used on Addresses.</li>",
                    "<li>API Client XP - XP can now be used on a client organization.</li>",
                    "<li>There are now more advanced search and filtering capabilities available on Addresses, Credit Cards, Specs, and Buyer Categories. This new search capability allows for more advanced filtering and fuzzy searches on lists. Take a look at the new, searchable attributes here: https://testdevcenter.ordercloud.io/docs#Categories_List </li>",
                    "<li>The API has been updated to allow for Anonymous Shopping within the OrderCloud platform. This update allows for much more flexibility in the buyer user workflow. In the past, buyer users had to be registered in order to purchase products. Now, they can go through the entire shopping workflow without signing in.</li>",
                    "<li>Spec Options can now be designated as the Default Spec Option for a Spec.</li>",
                    "<li>There is now the ability to create registration off of a temp user. A user can start with a temp user session and when they choose to profile themselves, a new user based on the template is created.</li>",
                    "<li>Temp users can create an order but nothing else on Me. It is now impossible for a temp user to create Me data outside of an order.</li>",
                    "<li>A <code>SpecCount</code> can now be shown to designate how many options are set up for a particular Spec.</li>",
                    "<code>SpecCount</code>",
                    "<li>The Docs section of Devcenter has been reorganized to better reflect how people are actually using the API.</li>",
                    "<li>We fixed a bug so that users can now filter on XP in the /me endpoint lists.</li>",
                    "<li>Multiple bug fixes were also included in this release.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.17.0",
                "Date": "5/20/2016"
            },
            "Features": {
                "Changelog": [
                    "<ul>\n<li>Approval rules have been updated significantly in this release. This release includes the new ApprovalRule data model (with full admin-side CRUD endpoints), support for a wide variety of expressions, and support for the actual buyer-side flow, including (legacy) email messaging. <em>There will be an approval rules blog post in the near future that will cover this more in-depth.</em></li>\n<li>The API route for Order listing has changed. When listing orders as a Seller user, you must now specify incoming or outgoing in the route, rather than in the query string. For example:<br/>\n<code>v1/orders/incoming</code> \n      This does NOT apply to <code>me/orders</code> - outgoing is always assumed there. It only applies to admin routes, such as incoming orders for sellers and outgoing orders for approving buyer users. Apps will need to be updated accordingly, and make sure you're using the latest version of the SDK</li>\n<li><code>IsReportingGroup</code> and <code>IsApprovingGroup</code> have been removed from the UserGroup object.</li>\n<li>This release also contains several bug fixes.</li>\n</ul>",
                    "<li>Approval rules have been updated significantly in this release. This release includes the new ApprovalRule data model (with full admin-side CRUD endpoints), support for a wide variety of expressions, and support for the actual buyer-side flow, including (legacy) email messaging. <em>There will be an approval rules blog post in the near future that will cover this more in-depth.</em></li>",
                    "<em>There will be an approval rules blog post in the near future that will cover this more in-depth.</em>",
                    "<li>The API route for Order listing has changed. When listing orders as a Seller user, you must now specify incoming or outgoing in the route, rather than in the query string. For example:<br/>\n<code>v1/orders/incoming</code> \n      This does NOT apply to <code>me/orders</code> - outgoing is always assumed there. It only applies to admin routes, such as incoming orders for sellers and outgoing orders for approving buyer users. Apps will need to be updated accordingly, and make sure you're using the latest version of the SDK</li>",
                    "<br/>",
                    "<code>v1/orders/incoming</code>",
                    "<code>me/orders</code>",
                    "<li><code>IsReportingGroup</code> and <code>IsApprovingGroup</code> have been removed from the UserGroup object.</li>",
                    "<code>IsReportingGroup</code>",
                    "<code>IsApprovingGroup</code>",
                    "<li>This release also contains several bug fixes.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.18.0",
                "Date": "5/25/2016"
            },
            "Features": {
                "Changelog": [
                    "<ul>\n<li>The API now has elevated security integration. 3rd party systems now have the ability to perform elevated security operations. This means that we can grant them specific access that is not accessible by the (buyer) client.</li>\n<li>The Rules Engine has been updated to replace the <code>item</code> object with <code>items</code> aggregate function. The <code>item</code> object has been replaced with <code>items</code> that contains aggregate functions allowing you do this: <code>items.any(CostCenter = 'XYZ')</code> instead of this: <code>item.CostCenter = 'XYZ'</code> This supports four such aggregate functions: <ul>\n<li><code>items.any(subexpression)</code> - returns true/false indicating whether any items match subexpression </li>\n<li><code>items.all(subexpression)</code> - returns true/false indicating whether any items match subexpression </li>\n<li><code>items.quantity(subexpression)</code> - returns total quantity of items matching subexpression</li>\n<li><code>items.total(subexpression)</code> - returns price total of all items matching subexpression</li>\n</ul>\n</li>\n<li>Upon sending a webhook, an access token is now appended to the outbound web hook call. If a web hook receiver needs to perform actions on behalf of that user with elevated claims, they can now use this token to do so. A nullable field has been added to webhooks called ElevatedClaimsList containing a comma separated list of Claims. </li>\n<li>Several improvements have been made to the Dev Center to allow management of the webhooks from with the Dev Center UI. </li>\n<li>Several bug fixes were also deployed with this release.</li>\n</ul>",
                    "<li>The API now has elevated security integration. 3rd party systems now have the ability to perform elevated security operations. This means that we can grant them specific access that is not accessible by the (buyer) client.</li>",
                    "<li>The Rules Engine has been updated to replace the <code>item</code> object with <code>items</code> aggregate function. The <code>item</code> object has been replaced with <code>items</code> that contains aggregate functions allowing you do this: <code>items.any(CostCenter = 'XYZ')</code> instead of this: <code>item.CostCenter = 'XYZ'</code> This supports four such aggregate functions: <ul>\n<li><code>items.any(subexpression)</code> - returns true/false indicating whether any items match subexpression </li>\n<li><code>items.all(subexpression)</code> - returns true/false indicating whether any items match subexpression </li>\n<li><code>items.quantity(subexpression)</code> - returns total quantity of items matching subexpression</li>\n<li><code>items.total(subexpression)</code> - returns price total of all items matching subexpression</li>\n</ul>\n</li>",
                    "<code>item</code>",
                    "<code>items</code>",
                    "<code>item</code>",
                    "<code>items</code>",
                    "<code>items.any(CostCenter = 'XYZ')</code>",
                    "<code>item.CostCenter = 'XYZ'</code>",
                    "<ul>\n<li><code>items.any(subexpression)</code> - returns true/false indicating whether any items match subexpression </li>\n<li><code>items.all(subexpression)</code> - returns true/false indicating whether any items match subexpression </li>\n<li><code>items.quantity(subexpression)</code> - returns total quantity of items matching subexpression</li>\n<li><code>items.total(subexpression)</code> - returns price total of all items matching subexpression</li>\n</ul>",
                    "<li><code>items.any(subexpression)</code> - returns true/false indicating whether any items match subexpression </li>",
                    "<code>items.any(subexpression)</code>",
                    "<li><code>items.all(subexpression)</code> - returns true/false indicating whether any items match subexpression </li>",
                    "<code>items.all(subexpression)</code>",
                    "<li><code>items.quantity(subexpression)</code> - returns total quantity of items matching subexpression</li>",
                    "<code>items.quantity(subexpression)</code>",
                    "<li><code>items.total(subexpression)</code> - returns price total of all items matching subexpression</li>",
                    "<code>items.total(subexpression)</code>",
                    "<li>Upon sending a webhook, an access token is now appended to the outbound web hook call. If a web hook receiver needs to perform actions on behalf of that user with elevated claims, they can now use this token to do so. A nullable field has been added to webhooks called ElevatedClaimsList containing a comma separated list of Claims. </li>",
                    "<li>Several improvements have been made to the Dev Center to allow management of the webhooks from with the Dev Center UI. </li>",
                    "<li>Several bug fixes were also deployed with this release.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.19.0",
                "Date": "5/31/2016"
            },
            "Features": {
                "Changelog": [
                    "<ul>\n<li>Route params have been added to webhooks. An object has been added that contains the values from the routeparams. </li>\n<li>A small number of bug fixes also went out with this release.</li>\n</ul>",
                    "<li>Route params have been added to webhooks. An object has been added that contains the values from the routeparams. </li>",
                    "<li>A small number of bug fixes also went out with this release.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.20.0",
                "Date": "6/10/2016"
            },
            "Features": {
                "Changelog": [
                    "<ul>\n<li>XP has been added to Cost Center endpoints. </li>\n<li>List routes for /me order will now mirror admin order routes with respect to requiring incoming/outgoing. Further, the rules of visibility have changed with the four order list routes in the interest of simplicity: <ul>\n<li><strong>orders/outgoing</strong> orders from my company (submitted only unless UnsubmittedOrderReader role) </li>\n<li><strong>orders/incoming</strong> orders to my company (submitted only unless UnsubmittedOrderReader role)</li>\n<li><strong>me/orders/outgoing</strong> orders created, approved, or declined by me</li>\n<li><strong>me/orders/incoming</strong> orders awaiting my approval </li>\n</ul>\n</li>\n<li>For Approval Rules, approved(ruleid) has been changed to order.approved(ruleid) </li>\n<li>Previously, admin address routes allowed you to see all addresses assigned to the buyer company AND your own private addresses. In order to simplify the visibility rules for admin routes (like with orders), private addresses are now only visible through /me routes.</li>\n</ul>",
                    "<li>XP has been added to Cost Center endpoints. </li>",
                    "<li>List routes for /me order will now mirror admin order routes with respect to requiring incoming/outgoing. Further, the rules of visibility have changed with the four order list routes in the interest of simplicity: <ul>\n<li><strong>orders/outgoing</strong> orders from my company (submitted only unless UnsubmittedOrderReader role) </li>\n<li><strong>orders/incoming</strong> orders to my company (submitted only unless UnsubmittedOrderReader role)</li>\n<li><strong>me/orders/outgoing</strong> orders created, approved, or declined by me</li>\n<li><strong>me/orders/incoming</strong> orders awaiting my approval </li>\n</ul>\n</li>",
                    "<ul>\n<li><strong>orders/outgoing</strong> orders from my company (submitted only unless UnsubmittedOrderReader role) </li>\n<li><strong>orders/incoming</strong> orders to my company (submitted only unless UnsubmittedOrderReader role)</li>\n<li><strong>me/orders/outgoing</strong> orders created, approved, or declined by me</li>\n<li><strong>me/orders/incoming</strong> orders awaiting my approval </li>\n</ul>",
                    "<li><strong>orders/outgoing</strong> orders from my company (submitted only unless UnsubmittedOrderReader role) </li>",
                    "<strong>orders/outgoing</strong>",
                    "<li><strong>orders/incoming</strong> orders to my company (submitted only unless UnsubmittedOrderReader role)</li>",
                    "<strong>orders/incoming</strong>",
                    "<li><strong>me/orders/outgoing</strong> orders created, approved, or declined by me</li>",
                    "<strong>me/orders/outgoing</strong>",
                    "<li><strong>me/orders/incoming</strong> orders awaiting my approval </li>",
                    "<strong>me/orders/incoming</strong>",
                    "<li>For Approval Rules, approved(ruleid) has been changed to order.approved(ruleid) </li>",
                    "<li>Previously, admin address routes allowed you to see all addresses assigned to the buyer company AND your own private addresses. In order to simplify the visibility rules for admin routes (like with orders), private addresses are now only visible through /me routes.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.21.0",
                "Date": "6/22/2016"
            },
            "Features": {
                "Changelog": [
                    "<ul>\n<li>Endpoint arguments that exist in the model, which the endpoint returns, and that have listArgs, have been removed. Example:<ul>\n<li><code>v1/buyers/{buyerID}/categories/assignments</code> This endpoint accepts buyerID, categoryID, userID, userGroupID, level, and listArgs. buyerID is required because it is part of the route. level should also be included because it is not part of the CategoryAssignment model. However, categoryID, userID, and userGroupID are all part of the CategoryAssignment model and can therefore be added to the Filters field within listArgs (since in both cases they will be included as query string parameters).</li>\n</ul>\n</li>\n<li>The State and Zipcode validation has been updated. For Addresses with US country code, it is now required to have a State and Zipcode. For non-US addresses, it is not required.</li>\n</ul>",
                    "<li>Endpoint arguments that exist in the model, which the endpoint returns, and that have listArgs, have been removed. Example:<ul>\n<li><code>v1/buyers/{buyerID}/categories/assignments</code> This endpoint accepts buyerID, categoryID, userID, userGroupID, level, and listArgs. buyerID is required because it is part of the route. level should also be included because it is not part of the CategoryAssignment model. However, categoryID, userID, and userGroupID are all part of the CategoryAssignment model and can therefore be added to the Filters field within listArgs (since in both cases they will be included as query string parameters).</li>\n</ul>\n</li>",
                    "<ul>\n<li><code>v1/buyers/{buyerID}/categories/assignments</code> This endpoint accepts buyerID, categoryID, userID, userGroupID, level, and listArgs. buyerID is required because it is part of the route. level should also be included because it is not part of the CategoryAssignment model. However, categoryID, userID, and userGroupID are all part of the CategoryAssignment model and can therefore be added to the Filters field within listArgs (since in both cases they will be included as query string parameters).</li>\n</ul>",
                    "<li><code>v1/buyers/{buyerID}/categories/assignments</code> This endpoint accepts buyerID, categoryID, userID, userGroupID, level, and listArgs. buyerID is required because it is part of the route. level should also be included because it is not part of the CategoryAssignment model. However, categoryID, userID, and userGroupID are all part of the CategoryAssignment model and can therefore be added to the Filters field within listArgs (since in both cases they will be included as query string parameters).</li>",
                    "<code>v1/buyers/{buyerID}/categories/assignments</code>",
                    "<li>The State and Zipcode validation has been updated. For Addresses with US country code, it is now required to have a State and Zipcode. For non-US addresses, it is not required.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.22.0",
                "Date": "7/8/2016"
            },
            "Features": {
                "Changelog": [
                    "<ul>\n<li>You can now list the pending approvals, for an order, by passing in the Order ID. This will primarily be used for email integrations. Notifications can now be sent to the approving group of users for each step, as the order gets passed along.</li>\n<li>The ability to set a ship-from address on a line item has been added, this will be useful for calculating shipping rates</li>\n<li>Endpoints have been created for seller addresses</li>\n<li>XP is now available for Approval Rules</li>\n<li>A Description field is now available for viewing, approving, and declining orders.</li>\n<li>XP is now available for Variants</li>\n<li>a number of bug fixes were also deployed with this release.</li>\n</ul>",
                    "<li>You can now list the pending approvals, for an order, by passing in the Order ID. This will primarily be used for email integrations. Notifications can now be sent to the approving group of users for each step, as the order gets passed along.</li>",
                    "<li>The ability to set a ship-from address on a line item has been added, this will be useful for calculating shipping rates</li>",
                    "<li>Endpoints have been created for seller addresses</li>",
                    "<li>XP is now available for Approval Rules</li>",
                    "<li>A Description field is now available for viewing, approving, and declining orders.</li>",
                    "<li>XP is now available for Variants</li>",
                    "<li>a number of bug fixes were also deployed with this release.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.23.0",
                "Date": "7/23/2016"
            },
            "Features": {
                "Changelog": [
                    "<ul>\n<li>A new Promotions feature has been added to the platform. Now you can set up promotions, using the same Rules Engine logic as <a href=\"https://devcenter.ordercloud.io/blog/rules-have-arrived\">Approval Rules</a>. This new functionality allows buyers to get a limited time discount, free shipping, etc. These Promotions can now be added to orders. Promotions are assignable to buyer parties. But like products, they are admin owned and can be shared between multiple buyers.</li>\n<li>An existing user can now start off as a temp user and then log in as an existing user. This gives them the ability to keep their current temp user order.</li>\n<li>The Order Approvals endpoint has been updated. You can now add comments and sort chronologically.</li>\n<li>You can now filter on Order.Total</li>\n<li>The endpoints returned from the Documentation API now properly reflect the Role information for each endpoint.</li>\n<li>The ability to get a list of pending order approvals has been improved. You can now get a list of unique users in one step, via: <code>/orders/xyz/eligibleapprovers</code> </li>\n<li>A number of bug fixes also went out with this release.</li>\n</ul>",
                    "<li>A new Promotions feature has been added to the platform. Now you can set up promotions, using the same Rules Engine logic as <a href=\"https://devcenter.ordercloud.io/blog/rules-have-arrived\">Approval Rules</a>. This new functionality allows buyers to get a limited time discount, free shipping, etc. These Promotions can now be added to orders. Promotions are assignable to buyer parties. But like products, they are admin owned and can be shared between multiple buyers.</li>",
                    "<a href=\"https://devcenter.ordercloud.io/blog/rules-have-arrived\">Approval Rules</a>",
                    "<li>An existing user can now start off as a temp user and then log in as an existing user. This gives them the ability to keep their current temp user order.</li>",
                    "<li>The Order Approvals endpoint has been updated. You can now add comments and sort chronologically.</li>",
                    "<li>You can now filter on Order.Total</li>",
                    "<li>The endpoints returned from the Documentation API now properly reflect the Role information for each endpoint.</li>",
                    "<li>The ability to get a list of pending order approvals has been improved. You can now get a list of unique users in one step, via: <code>/orders/xyz/eligibleapprovers</code> </li>",
                    "<code>/orders/xyz/eligibleapprovers</code>",
                    "<li>A number of bug fixes also went out with this release.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.24.0",
                "Date": "8/9/2016"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>Security Profiles can now be assigned at the party level. (Buyer, User Group, User) These Security Profiles will be inherited, so a user\u2019s total roles will actually be the total sum of these inherited profiles. In order to see what roles a user actually has, <code>user.AvailableRoles</code> is an array listing all the roles that user has.</li>\n<li>Because security profiles can be assigned at the Buyer level, apps can now use self-signup of users more easily. </li>\n<li>Administration of Admin Users is more granular now with new <code>AdminUserReader</code> and <code>AdminUserAdmin</code> roles for Security Profiles. </li>\n<li>We added XP to Approval Rules. </li>\n<li>We added the option to limit usage of a Promotion to once per customer. </li>\n<li>We added a read-only <code>RedemptionCount</code> to Promotions, so that users will be able to report more easily on how often a Promotions is used.</li>\n<li>We have added the ability to set a default <code>ShipFrom</code> address on a product, so that it will always show as shipping from that address. </li>\n<li>Admin Users can now be put into Admin User Groups, much like Buyer Users/Buyer User Groups.</li>\n</ul>",
                    "<li>Security Profiles can now be assigned at the party level. (Buyer, User Group, User) These Security Profiles will be inherited, so a user\u2019s total roles will actually be the total sum of these inherited profiles. In order to see what roles a user actually has, <code>user.AvailableRoles</code> is an array listing all the roles that user has.</li>",
                    "<code>user.AvailableRoles</code>",
                    "<li>Because security profiles can be assigned at the Buyer level, apps can now use self-signup of users more easily. </li>",
                    "<li>Administration of Admin Users is more granular now with new <code>AdminUserReader</code> and <code>AdminUserAdmin</code> roles for Security Profiles. </li>",
                    "<code>AdminUserReader</code>",
                    "<code>AdminUserAdmin</code>",
                    "<li>We added XP to Approval Rules. </li>",
                    "<li>We added the option to limit usage of a Promotion to once per customer. </li>",
                    "<li>We added a read-only <code>RedemptionCount</code> to Promotions, so that users will be able to report more easily on how often a Promotions is used.</li>",
                    "<code>RedemptionCount</code>",
                    "<li>We have added the ability to set a default <code>ShipFrom</code> address on a product, so that it will always show as shipping from that address. </li>",
                    "<code>ShipFrom</code>",
                    "<li>Admin Users can now be put into Admin User Groups, much like Buyer Users/Buyer User Groups.</li>",
                    "<h2>Bug Fixes</h2>",
                    "<ul>\n<li>Previously, you would occasionally get a 409 error when <code>PATCH</code>ing an order. This has now been fixed.</li>\n</ul>",
                    "<li>Previously, you would occasionally get a 409 error when <code>PATCH</code>ing an order. This has now been fixed.</li>",
                    "<code>PATCH</code>",
                    "<h2>Breaking Changes</h2>",
                    "<ul>\n<li>Integration Proxy responses are now more clear about where an error is coming from. </li>\n<li>We changed how we store refresh tokens. This adds more security, as well as allowing us to have an unlimited refresh token. All apps will have to reauthorize after we deploy API 24. </li>\n<li>As the Category List endpoint now supports filtering a list of categories by parentID, we have removed: <code>GET categories/xyz/categories</code> (Categories.ListChildren) <code>GET me/categories/xyz/categories</code> (Me.Categories.ListSubcategories) </li>\n<li>Providing a <code>parentID</code> parameter explicitly in Category List is now redundant. Users should check that you are using the latest version of your SDK. </li>\n<li>Username is now required to be unique within a seller network. This opens up better possibilities for multiple buyers within one app, and a better user verification process. <em>If you have not updated your username before the API 24 deploy when contacted, you will not be able to log in.</em> </li>\n<li>We have changed our integration proxy base URL from <code>api.ordercloud.io/v1/nativeintegrationproxy/:service</code> to <code>api.ordercloud.io/v1/integrationproxy/:service</code>. If you use an integration within your app, please verify your url has been updated.</li>\n</ul>",
                    "<li>Integration Proxy responses are now more clear about where an error is coming from. </li>",
                    "<li>We changed how we store refresh tokens. This adds more security, as well as allowing us to have an unlimited refresh token. All apps will have to reauthorize after we deploy API 24. </li>",
                    "<li>As the Category List endpoint now supports filtering a list of categories by parentID, we have removed: <code>GET categories/xyz/categories</code> (Categories.ListChildren) <code>GET me/categories/xyz/categories</code> (Me.Categories.ListSubcategories) </li>",
                    "<code>GET categories/xyz/categories</code>",
                    "<code>GET me/categories/xyz/categories</code>",
                    "<li>Providing a <code>parentID</code> parameter explicitly in Category List is now redundant. Users should check that you are using the latest version of your SDK. </li>",
                    "<code>parentID</code>",
                    "<li>Username is now required to be unique within a seller network. This opens up better possibilities for multiple buyers within one app, and a better user verification process. <em>If you have not updated your username before the API 24 deploy when contacted, you will not be able to log in.</em> </li>",
                    "<em>If you have not updated your username before the API 24 deploy when contacted, you will not be able to log in.</em>",
                    "<li>We have changed our integration proxy base URL from <code>api.ordercloud.io/v1/nativeintegrationproxy/:service</code> to <code>api.ordercloud.io/v1/integrationproxy/:service</code>. If you use an integration within your app, please verify your url has been updated.</li>",
                    "<code>api.ordercloud.io/v1/nativeintegrationproxy/:service</code>",
                    "<code>api.ordercloud.io/v1/integrationproxy/:service</code>"
                ],
                "Bug Fixes": [
                    "<ul>\n<li>Previously, you would occasionally get a 409 error when <code>PATCH</code>ing an order. This has now been fixed.</li>\n</ul>",
                    "<li>Previously, you would occasionally get a 409 error when <code>PATCH</code>ing an order. This has now been fixed.</li>",
                    "<code>PATCH</code>",
                    "<h2>Breaking Changes</h2>",
                    "<ul>\n<li>Integration Proxy responses are now more clear about where an error is coming from. </li>\n<li>We changed how we store refresh tokens. This adds more security, as well as allowing us to have an unlimited refresh token. All apps will have to reauthorize after we deploy API 24. </li>\n<li>As the Category List endpoint now supports filtering a list of categories by parentID, we have removed: <code>GET categories/xyz/categories</code> (Categories.ListChildren) <code>GET me/categories/xyz/categories</code> (Me.Categories.ListSubcategories) </li>\n<li>Providing a <code>parentID</code> parameter explicitly in Category List is now redundant. Users should check that you are using the latest version of your SDK. </li>\n<li>Username is now required to be unique within a seller network. This opens up better possibilities for multiple buyers within one app, and a better user verification process. <em>If you have not updated your username before the API 24 deploy when contacted, you will not be able to log in.</em> </li>\n<li>We have changed our integration proxy base URL from <code>api.ordercloud.io/v1/nativeintegrationproxy/:service</code> to <code>api.ordercloud.io/v1/integrationproxy/:service</code>. If you use an integration within your app, please verify your url has been updated.</li>\n</ul>",
                    "<li>Integration Proxy responses are now more clear about where an error is coming from. </li>",
                    "<li>We changed how we store refresh tokens. This adds more security, as well as allowing us to have an unlimited refresh token. All apps will have to reauthorize after we deploy API 24. </li>",
                    "<li>As the Category List endpoint now supports filtering a list of categories by parentID, we have removed: <code>GET categories/xyz/categories</code> (Categories.ListChildren) <code>GET me/categories/xyz/categories</code> (Me.Categories.ListSubcategories) </li>",
                    "<code>GET categories/xyz/categories</code>",
                    "<code>GET me/categories/xyz/categories</code>",
                    "<li>Providing a <code>parentID</code> parameter explicitly in Category List is now redundant. Users should check that you are using the latest version of your SDK. </li>",
                    "<code>parentID</code>",
                    "<li>Username is now required to be unique within a seller network. This opens up better possibilities for multiple buyers within one app, and a better user verification process. <em>If you have not updated your username before the API 24 deploy when contacted, you will not be able to log in.</em> </li>",
                    "<em>If you have not updated your username before the API 24 deploy when contacted, you will not be able to log in.</em>",
                    "<li>We have changed our integration proxy base URL from <code>api.ordercloud.io/v1/nativeintegrationproxy/:service</code> to <code>api.ordercloud.io/v1/integrationproxy/:service</code>. If you use an integration within your app, please verify your url has been updated.</li>",
                    "<code>api.ordercloud.io/v1/nativeintegrationproxy/:service</code>",
                    "<code>api.ordercloud.io/v1/integrationproxy/:service</code>"
                ],
                "Breaking Changes": [
                    "<ul>\n<li>Integration Proxy responses are now more clear about where an error is coming from. </li>\n<li>We changed how we store refresh tokens. This adds more security, as well as allowing us to have an unlimited refresh token. All apps will have to reauthorize after we deploy API 24. </li>\n<li>As the Category List endpoint now supports filtering a list of categories by parentID, we have removed: <code>GET categories/xyz/categories</code> (Categories.ListChildren) <code>GET me/categories/xyz/categories</code> (Me.Categories.ListSubcategories) </li>\n<li>Providing a <code>parentID</code> parameter explicitly in Category List is now redundant. Users should check that you are using the latest version of your SDK. </li>\n<li>Username is now required to be unique within a seller network. This opens up better possibilities for multiple buyers within one app, and a better user verification process. <em>If you have not updated your username before the API 24 deploy when contacted, you will not be able to log in.</em> </li>\n<li>We have changed our integration proxy base URL from <code>api.ordercloud.io/v1/nativeintegrationproxy/:service</code> to <code>api.ordercloud.io/v1/integrationproxy/:service</code>. If you use an integration within your app, please verify your url has been updated.</li>\n</ul>",
                    "<li>Integration Proxy responses are now more clear about where an error is coming from. </li>",
                    "<li>We changed how we store refresh tokens. This adds more security, as well as allowing us to have an unlimited refresh token. All apps will have to reauthorize after we deploy API 24. </li>",
                    "<li>As the Category List endpoint now supports filtering a list of categories by parentID, we have removed: <code>GET categories/xyz/categories</code> (Categories.ListChildren) <code>GET me/categories/xyz/categories</code> (Me.Categories.ListSubcategories) </li>",
                    "<code>GET categories/xyz/categories</code>",
                    "<code>GET me/categories/xyz/categories</code>",
                    "<li>Providing a <code>parentID</code> parameter explicitly in Category List is now redundant. Users should check that you are using the latest version of your SDK. </li>",
                    "<code>parentID</code>",
                    "<li>Username is now required to be unique within a seller network. This opens up better possibilities for multiple buyers within one app, and a better user verification process. <em>If you have not updated your username before the API 24 deploy when contacted, you will not be able to log in.</em> </li>",
                    "<em>If you have not updated your username before the API 24 deploy when contacted, you will not be able to log in.</em>",
                    "<li>We have changed our integration proxy base URL from <code>api.ordercloud.io/v1/nativeintegrationproxy/:service</code> to <code>api.ordercloud.io/v1/integrationproxy/:service</code>. If you use an integration within your app, please verify your url has been updated.</li>",
                    "<code>api.ordercloud.io/v1/nativeintegrationproxy/:service</code>",
                    "<code>api.ordercloud.io/v1/integrationproxy/:service</code>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.24.1",
                "Date": "8/25/2016"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>Add Dimensions to Product Object</li>\n</ul>",
                    "<li>Add Dimensions to Product Object</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.25.0",
                "Date": "9/3/2016"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>Promotions - Patching order incorrectly updates PromotionDiscount</li>\n<li>Resolved Deadlock/Timeout issue on product search with xp filter</li>\n</ul>",
                    "<li>Promotions - Patching order incorrectly updates PromotionDiscount</li>",
                    "<li>Resolved Deadlock/Timeout issue on product search with xp filter</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.25.1",
                "Date": "9/8/2016"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>Line Items: Attempt to patch product id should throw error</li>\n<li>Credit Cards: should validate on creating</li>\n<li>Performance issues - <code>order/{orderid}/submit</code> endpoint - time out error</li>\n<li>Specs: <code>/productassignments</code> returns 500 if no specID</li>\n</ul>",
                    "<li>Line Items: Attempt to patch product id should throw error</li>",
                    "<li>Credit Cards: should validate on creating</li>",
                    "<li>Performance issues - <code>order/{orderid}/submit</code> endpoint - time out error</li>",
                    "<code>order/{orderid}/submit</code>",
                    "<li>Specs: <code>/productassignments</code> returns 500 if no specID</li>",
                    "<code>/productassignments</code>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.26.0",
                "Date": "9/21/2016"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>Line Items: Date Needed cannot be in the past</li>\n<li>Category: SaveCategoryAssignmentAsync Assigning to usergroup also assigns at company level</li>\n<li>Category: Client.Me.ListCategoriesAsync not returning expected result</li>\n<li>\"Sequence contains no elements\" exceptions in BaseApiController</li>\n</ul>",
                    "<li>Line Items: Date Needed cannot be in the past</li>",
                    "<li>Category: SaveCategoryAssignmentAsync Assigning to usergroup also assigns at company level</li>",
                    "<li>Category: Client.Me.ListCategoriesAsync not returning expected result</li>",
                    "<li>\"Sequence contains no elements\" exceptions in BaseApiController</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.28.0",
                "Date": "10/5/2016"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>Product/Spec Enhancements</li>\n</ul>",
                    "<li>Product/Spec Enhancements</li>",
                    "<h2>Bug Fixes</h2>",
                    "<ul>\n<li>Preserve InteropID in Buyer Delete</li>\n</ul>",
                    "<li>Preserve InteropID in Buyer Delete</li>"
                ],
                "Bug Fixes": [
                    "<ul>\n<li>Preserve InteropID in Buyer Delete</li>\n</ul>",
                    "<li>Preserve InteropID in Buyer Delete</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.29.0",
                "Date": "10/26/2016"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>Integration Proxies and Assignments - see the Integrations guides in documentation.ordercloud.io</li>\n<li>Webhook assignments - see Webhooks in the Dashboard guide in documentation.ordercloud.io</li>\n</ul>",
                    "<li>Integration Proxies and Assignments - see the Integrations guides in documentation.ordercloud.io</li>",
                    "<li>Webhook assignments - see Webhooks in the Dashboard guide in documentation.ordercloud.io</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.30.0",
                "Date": "10/28/2016"
            },
            "Features": {
                "New Features:": [
                    "<ul>\n<li>\n<p><strong>Shared Catalogs</strong>: Now a seller org can have multiple catalogs that can be assigned to one or many buyer orgs. There will be more information about this feature coming soon, but please be aware that it may break some existing routes particuarlly around categories, as categories are now specific to a catalog instead of a buyer. To update your existing categories routes, you'll need to add the catalog ID to your API routes, and as a parameter in your SDK calls. Me Category endpoints are not affected, except in that you can optionally filter by catalog. Please check out the <a href=\"http://qa-documentation.ordercloud.io/guides/base-use-cases/implement-shared-catalogs\">Api Documentation</a>.</p>\n</li>\n<li>\n<p>A single client ID for an app can be used by different buyers. This is our first step towards an exciting feature on our roadmap, <strong>Buyer Networks</strong>.</p>\n</li>\n<li>\n<p>You can now reference Product Names in your Mailchimp/Mandrill message templates! Previously, you could use Product Description and Product ID, now you can add Product Name as well. </p>\n</li>\n</ul>",
                    "<li>\n<p><strong>Shared Catalogs</strong>: Now a seller org can have multiple catalogs that can be assigned to one or many buyer orgs. There will be more information about this feature coming soon, but please be aware that it may break some existing routes particuarlly around categories, as categories are now specific to a catalog instead of a buyer. To update your existing categories routes, you'll need to add the catalog ID to your API routes, and as a parameter in your SDK calls. Me Category endpoints are not affected, except in that you can optionally filter by catalog. Please check out the <a href=\"http://qa-documentation.ordercloud.io/guides/base-use-cases/implement-shared-catalogs\">Api Documentation</a>.</p>\n</li>",
                    "<p><strong>Shared Catalogs</strong>: Now a seller org can have multiple catalogs that can be assigned to one or many buyer orgs. There will be more information about this feature coming soon, but please be aware that it may break some existing routes particuarlly around categories, as categories are now specific to a catalog instead of a buyer. To update your existing categories routes, you'll need to add the catalog ID to your API routes, and as a parameter in your SDK calls. Me Category endpoints are not affected, except in that you can optionally filter by catalog. Please check out the <a href=\"http://qa-documentation.ordercloud.io/guides/base-use-cases/implement-shared-catalogs\">Api Documentation</a>.</p>",
                    "<strong>Shared Catalogs</strong>",
                    "<a href=\"http://qa-documentation.ordercloud.io/guides/base-use-cases/implement-shared-catalogs\">Api Documentation</a>",
                    "<li>\n<p>A single client ID for an app can be used by different buyers. This is our first step towards an exciting feature on our roadmap, <strong>Buyer Networks</strong>.</p>\n</li>",
                    "<p>A single client ID for an app can be used by different buyers. This is our first step towards an exciting feature on our roadmap, <strong>Buyer Networks</strong>.</p>",
                    "<strong>Buyer Networks</strong>",
                    "<li>\n<p>You can now reference Product Names in your Mailchimp/Mandrill message templates! Previously, you could use Product Description and Product ID, now you can add Product Name as well. </p>\n</li>",
                    "<p>You can now reference Product Names in your Mailchimp/Mandrill message templates! Previously, you could use Product Description and Product ID, now you can add Product Name as well. </p>",
                    "<h2>Bug Fixes:</h2>",
                    "<ul>\n<li>We updated <strong>Spending Accounts</strong> to be decremented when an order is submitted, rather then when a payment is applied to an unsubmitted order. (Clearing an order will refund any payments applied, even if the order is unsubmitted-- deleting the order will not do so automatically.)</li>\n</ul>",
                    "<li>We updated <strong>Spending Accounts</strong> to be decremented when an order is submitted, rather then when a payment is applied to an unsubmitted order. (Clearing an order will refund any payments applied, even if the order is unsubmitted-- deleting the order will not do so automatically.)</li>",
                    "<strong>Spending Accounts</strong>",
                    "<h2>SDK Release Notes:</h2>",
                    "<p>The SDK that will be going out with the API release will be <a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.24\">v1.0.24</a>.</p>",
                    "<a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.24\">v1.0.24</a>",
                    "<p>After the API is released, if anyone runs a <code>bower update</code> with <em>lastest</em> in their bower.json for ordercloud-ng-sdk they will be updated to <a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.24\">v1.0.24</a></p>",
                    "<code>bower update</code>",
                    "<em>lastest</em>",
                    "<a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.24\">v1.0.24</a>"
                ],
                "Bug Fixes:": [
                    "<ul>\n<li>We updated <strong>Spending Accounts</strong> to be decremented when an order is submitted, rather then when a payment is applied to an unsubmitted order. (Clearing an order will refund any payments applied, even if the order is unsubmitted-- deleting the order will not do so automatically.)</li>\n</ul>",
                    "<li>We updated <strong>Spending Accounts</strong> to be decremented when an order is submitted, rather then when a payment is applied to an unsubmitted order. (Clearing an order will refund any payments applied, even if the order is unsubmitted-- deleting the order will not do so automatically.)</li>",
                    "<strong>Spending Accounts</strong>",
                    "<h2>SDK Release Notes:</h2>",
                    "<p>The SDK that will be going out with the API release will be <a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.24\">v1.0.24</a>.</p>",
                    "<a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.24\">v1.0.24</a>",
                    "<p>After the API is released, if anyone runs a <code>bower update</code> with <em>lastest</em> in their bower.json for ordercloud-ng-sdk they will be updated to <a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.24\">v1.0.24</a></p>",
                    "<code>bower update</code>",
                    "<em>lastest</em>",
                    "<a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.24\">v1.0.24</a>"
                ],
                "SDK Release Notes:": [
                    "<p>The SDK that will be going out with the API release will be <a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.24\">v1.0.24</a>.</p>",
                    "<a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.24\">v1.0.24</a>",
                    "<p>After the API is released, if anyone runs a <code>bower update</code> with <em>lastest</em> in their bower.json for ordercloud-ng-sdk they will be updated to <a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.24\">v1.0.24</a></p>",
                    "<code>bower update</code>",
                    "<em>lastest</em>",
                    "<a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.24\">v1.0.24</a>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.30.1",
                "Date": "11/4/2016"
            },
            "Features": {
                "New Features:": [
                    "<ul>\n<li>Delivery date added to <strong>Shipments</strong></li>\n</ul>",
                    "<li>Delivery date added to <strong>Shipments</strong></li>",
                    "<strong>Shipments</strong>",
                    "<h2>Bug Fixes:</h2>",
                    "<ul>\n<li>several fixes around <strong>Buyer Networks</strong></li>\n</ul>",
                    "<li>several fixes around <strong>Buyer Networks</strong></li>",
                    "<strong>Buyer Networks</strong>"
                ],
                "Bug Fixes:": [
                    "<ul>\n<li>several fixes around <strong>Buyer Networks</strong></li>\n</ul>",
                    "<li>several fixes around <strong>Buyer Networks</strong></li>",
                    "<strong>Buyer Networks</strong>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.31",
                "Date": "11/10/2016"
            },
            "Features": {
                "New Features:": [
                    "<ul>\n<li>The Authorize.net integration was updated to return more information in a more uniform response body. You can view updated Authorize.Net documentation <a href=\"\">here</a>.</li>\n</ul>",
                    "<li>The Authorize.net integration was updated to return more information in a more uniform response body. You can view updated Authorize.Net documentation <a href=\"\">here</a>.</li>",
                    "<a href=\"\">here</a>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.32",
                "Date": "11/21/2016"
            },
            "Features": {
                "New Features:": [
                    "<ul>\n<li>You can now filter list Order queries on the BillingAddress and ShippingAddress subobjects. This works on both Order and Me.Order lists. EX:  <code>/orders?ShippingAddress.Street1=xyz</code></li>\n<li>We've added true order-level shipping addresses. If a shipping address is set at the order level, all line items on the order will inherit that shipping address.<ul>\n<li><strong>PLEASE NOTE</strong>: Previously, if all your line items had the same shipping address, any new line item would have the same shipping address. This is no longer true. Line items will <em>ONLY</em> inherit a shipping address when it is explicitly set at the order level.</li>\n<li>There are no longer write-only address IDs on Order or Line Items; all of the following are now read/write:<ul>\n<li>Order.BillingAddressID</li>\n<li>Order.ShippingAddressID</li>\n<li>LineItem.ShippingAddressID</li>\n<li>LineItem.ShipFromAddressID</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>We've made several performance improvements around product history. </li>\n</ul>",
                    "<li>You can now filter list Order queries on the BillingAddress and ShippingAddress subobjects. This works on both Order and Me.Order lists. EX:  <code>/orders?ShippingAddress.Street1=xyz</code></li>",
                    "<code>/orders?ShippingAddress.Street1=xyz</code>",
                    "<li>We've added true order-level shipping addresses. If a shipping address is set at the order level, all line items on the order will inherit that shipping address.<ul>\n<li><strong>PLEASE NOTE</strong>: Previously, if all your line items had the same shipping address, any new line item would have the same shipping address. This is no longer true. Line items will <em>ONLY</em> inherit a shipping address when it is explicitly set at the order level.</li>\n<li>There are no longer write-only address IDs on Order or Line Items; all of the following are now read/write:<ul>\n<li>Order.BillingAddressID</li>\n<li>Order.ShippingAddressID</li>\n<li>LineItem.ShippingAddressID</li>\n<li>LineItem.ShipFromAddressID</li>\n</ul>\n</li>\n</ul>\n</li>",
                    "<ul>\n<li><strong>PLEASE NOTE</strong>: Previously, if all your line items had the same shipping address, any new line item would have the same shipping address. This is no longer true. Line items will <em>ONLY</em> inherit a shipping address when it is explicitly set at the order level.</li>\n<li>There are no longer write-only address IDs on Order or Line Items; all of the following are now read/write:<ul>\n<li>Order.BillingAddressID</li>\n<li>Order.ShippingAddressID</li>\n<li>LineItem.ShippingAddressID</li>\n<li>LineItem.ShipFromAddressID</li>\n</ul>\n</li>\n</ul>",
                    "<li><strong>PLEASE NOTE</strong>: Previously, if all your line items had the same shipping address, any new line item would have the same shipping address. This is no longer true. Line items will <em>ONLY</em> inherit a shipping address when it is explicitly set at the order level.</li>",
                    "<strong>PLEASE NOTE</strong>",
                    "<em>ONLY</em>",
                    "<li>There are no longer write-only address IDs on Order or Line Items; all of the following are now read/write:<ul>\n<li>Order.BillingAddressID</li>\n<li>Order.ShippingAddressID</li>\n<li>LineItem.ShippingAddressID</li>\n<li>LineItem.ShipFromAddressID</li>\n</ul>\n</li>",
                    "<ul>\n<li>Order.BillingAddressID</li>\n<li>Order.ShippingAddressID</li>\n<li>LineItem.ShippingAddressID</li>\n<li>LineItem.ShipFromAddressID</li>\n</ul>",
                    "<li>Order.BillingAddressID</li>",
                    "<li>Order.ShippingAddressID</li>",
                    "<li>LineItem.ShippingAddressID</li>",
                    "<li>LineItem.ShipFromAddressID</li>",
                    "<li>We've made several performance improvements around product history. </li>",
                    "<h2>Bug Fixes:</h2>",
                    "<ul>\n<li>You can again list and delete security profile assignments for admin users. </li>\n<li>Search results will now be accurate when listing categories using a depth parameter.</li>\n<li>You can no longer assign an invalid spec to a product; you will get an error on assignment.</li>\n</ul>",
                    "<li>You can again list and delete security profile assignments for admin users. </li>",
                    "<li>Search results will now be accurate when listing categories using a depth parameter.</li>",
                    "<li>You can no longer assign an invalid spec to a product; you will get an error on assignment.</li>"
                ],
                "Bug Fixes:": [
                    "<ul>\n<li>You can again list and delete security profile assignments for admin users. </li>\n<li>Search results will now be accurate when listing categories using a depth parameter.</li>\n<li>You can no longer assign an invalid spec to a product; you will get an error on assignment.</li>\n</ul>",
                    "<li>You can again list and delete security profile assignments for admin users. </li>",
                    "<li>Search results will now be accurate when listing categories using a depth parameter.</li>",
                    "<li>You can no longer assign an invalid spec to a product; you will get an error on assignment.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.33",
                "Date": "12/06/2016"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>We added a new User Prespective endpoint for returning a user's spending accounts. <a href=\"https://documentation.ordercloud.io/api-reference#MeSpendingAccounts\">Me/ListSpendingAccounts</a></li>\n<li>We've improved the information in our documentation about searchable/sortable properties and the order of precedence that these are applied in. <a href=\"https://documentation.ordercloud.io/api-reference#MeAddresses\">An example is the API Documentation around Addresses</a></li>\n<li>We've added some performance enhacements around Products, particularly listing all products for a buyer. </li>\n<li>We now allow you to delete a product that is being used in an unsubmitted order. In submitted orders, the product information is retained, even after deletion.</li>\n<li>You can now use categories in the Rules Engine! For example, if you'd like to make a promotion that applies to products in only one category, you can use the following for a value expression: <code>items.any(product.incategory('xxx'))</code></li>\n</ul>",
                    "<li>We added a new User Prespective endpoint for returning a user's spending accounts. <a href=\"https://documentation.ordercloud.io/api-reference#MeSpendingAccounts\">Me/ListSpendingAccounts</a></li>",
                    "<a href=\"https://documentation.ordercloud.io/api-reference#MeSpendingAccounts\">Me/ListSpendingAccounts</a>",
                    "<li>We've improved the information in our documentation about searchable/sortable properties and the order of precedence that these are applied in. <a href=\"https://documentation.ordercloud.io/api-reference#MeAddresses\">An example is the API Documentation around Addresses</a></li>",
                    "<a href=\"https://documentation.ordercloud.io/api-reference#MeAddresses\">An example is the API Documentation around Addresses</a>",
                    "<li>We've added some performance enhacements around Products, particularly listing all products for a buyer. </li>",
                    "<li>We now allow you to delete a product that is being used in an unsubmitted order. In submitted orders, the product information is retained, even after deletion.</li>",
                    "<li>You can now use categories in the Rules Engine! For example, if you'd like to make a promotion that applies to products in only one category, you can use the following for a value expression: <code>items.any(product.incategory('xxx'))</code></li>",
                    "<code>items.any(product.incategory('xxx'))</code>",
                    "<h2>Bug Fixes</h2>",
                    "<ul>\n<li>When you update a buyer company's default catalog, it actually updates now!</li>\n<li>We fixed an issue where, if you were authenticating as a user with claims other than <code>FullAccess</code>, the authentication performance was very poor.</li>\n</ul>",
                    "<li>When you update a buyer company's default catalog, it actually updates now!</li>",
                    "<li>We fixed an issue where, if you were authenticating as a user with claims other than <code>FullAccess</code>, the authentication performance was very poor.</li>",
                    "<code>FullAccess</code>",
                    "<h2>Client Libraries</h2>",
                    "<ul>\n<li><a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.25-prerelease\">Angular SDK</a></li>\n</ul>",
                    "<li><a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.25-prerelease\">Angular SDK</a></li>",
                    "<a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.25-prerelease\">Angular SDK</a>"
                ],
                "Bug Fixes": [
                    "<ul>\n<li>When you update a buyer company's default catalog, it actually updates now!</li>\n<li>We fixed an issue where, if you were authenticating as a user with claims other than <code>FullAccess</code>, the authentication performance was very poor.</li>\n</ul>",
                    "<li>When you update a buyer company's default catalog, it actually updates now!</li>",
                    "<li>We fixed an issue where, if you were authenticating as a user with claims other than <code>FullAccess</code>, the authentication performance was very poor.</li>",
                    "<code>FullAccess</code>",
                    "<h2>Client Libraries</h2>",
                    "<ul>\n<li><a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.25-prerelease\">Angular SDK</a></li>\n</ul>",
                    "<li><a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.25-prerelease\">Angular SDK</a></li>",
                    "<a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.25-prerelease\">Angular SDK</a>"
                ],
                "Client Libraries": [
                    "<ul>\n<li><a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.25-prerelease\">Angular SDK</a></li>\n</ul>",
                    "<li><a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.25-prerelease\">Angular SDK</a></li>",
                    "<a href=\"https://github.com/ordercloud-api/angular-sdk/releases/tag/v1.0.25-prerelease\">Angular SDK</a>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.35",
                "Date": "12/15/2016"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>We've expanded how you can use categories in the Rules Engine. You can now use <code>items.total</code> in your value expressions. </li>\n<li>We've added some new Mandrill variables that can be used in your Mandrill integrations:<ul>\n<li>Line Item Count</li>\n<li>PO#</li>\n<li>Ship To</li>\n<li>Prior Approver</li>\n</ul>\n</li>\n<li>You can use any Order XP in your Mandrill templates, including subobjects. EX: <code>orderxp_xpKey</code>, nested objects: <code>orderxp_xpKey_xpKey2</code>, and xp arrays indexes are accessed like this: <code>orderxp_xpKey_0</code> (with zero being the index of choice).</li>\n<li>The Shipping Rate integration will now also calcuate shipping rates based off of the Line Item level ship from address, not just the product ship from address. Line Item-level shipping will take priority over product-level.</li>\n<li>You can now use just a username, not an email, to trigger a forgotten password email!</li>\n</ul>",
                    "<li>We've expanded how you can use categories in the Rules Engine. You can now use <code>items.total</code> in your value expressions. </li>",
                    "<code>items.total</code>",
                    "<li>We've added some new Mandrill variables that can be used in your Mandrill integrations:<ul>\n<li>Line Item Count</li>\n<li>PO#</li>\n<li>Ship To</li>\n<li>Prior Approver</li>\n</ul>\n</li>",
                    "<ul>\n<li>Line Item Count</li>\n<li>PO#</li>\n<li>Ship To</li>\n<li>Prior Approver</li>\n</ul>",
                    "<li>Line Item Count</li>",
                    "<li>PO#</li>",
                    "<li>Ship To</li>",
                    "<li>Prior Approver</li>",
                    "<li>You can use any Order XP in your Mandrill templates, including subobjects. EX: <code>orderxp_xpKey</code>, nested objects: <code>orderxp_xpKey_xpKey2</code>, and xp arrays indexes are accessed like this: <code>orderxp_xpKey_0</code> (with zero being the index of choice).</li>",
                    "<code>orderxp_xpKey</code>",
                    "<code>orderxp_xpKey_xpKey2</code>",
                    "<code>orderxp_xpKey_0</code>",
                    "<li>The Shipping Rate integration will now also calcuate shipping rates based off of the Line Item level ship from address, not just the product ship from address. Line Item-level shipping will take priority over product-level.</li>",
                    "<li>You can now use just a username, not an email, to trigger a forgotten password email!</li>",
                    "<h2>Bug Fixes</h2>",
                    "<ul>\n<li>We fixed a bug where the Product Delete webhook trigger wasn't firing correctly.</li>\n<li>We fixed a display issue in the documentation around sorting priority.</li>\n</ul>",
                    "<li>We fixed a bug where the Product Delete webhook trigger wasn't firing correctly.</li>",
                    "<li>We fixed a display issue in the documentation around sorting priority.</li>",
                    "<h2>Client Libraries</h2>",
                    "<p>(potentially link to all of our current client libraries)</p>"
                ],
                "Bug Fixes": [
                    "<ul>\n<li>We fixed a bug where the Product Delete webhook trigger wasn't firing correctly.</li>\n<li>We fixed a display issue in the documentation around sorting priority.</li>\n</ul>",
                    "<li>We fixed a bug where the Product Delete webhook trigger wasn't firing correctly.</li>",
                    "<li>We fixed a display issue in the documentation around sorting priority.</li>",
                    "<h2>Client Libraries</h2>",
                    "<p>(potentially link to all of our current client libraries)</p>"
                ],
                "Client Libraries": [
                    "<p>(potentially link to all of our current client libraries)</p>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.36",
                "Date": "01/17/2017"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>We've added a new sub-object to the LineItem object. Now, when you list LineItems, you'll see the products that are on the lineitem too. This currently does not include the full price break information.\n    <em>New Line Item Object Example</em>:\n    <code>{\n      \"ID\": \"6-Ap0yfJ6k2kDxEJhPA4432vjA\",\n      \"ProductID\": \"Test01\",\n      \"Quantity\": 5,\n      \"DateAdded\": \"2016-05-19T17:51:46.127+00:00\",\n      \"QuantityShipped\": 0,\n      \"UnitPrice\": null,\n      \"LineTotal\": 0,\n      \"CostCenter\": null,\n      \"DateNeeded\": null,\n      \"ShippingAccount\": null,\n      \"ShippingAddressID\": \"2WRMZMDcakaVaoJ6Hf_r1w\",\n      \"ShipFromAddressID\": null,\n      \"Product\": {\n        \"ID\": \"Test01\",\n        \"Name\": \"Test01\",\n        \"Description\": \"Test01 Lorem Ipsum\",\n        \"QuantityMultiplier\": 1,\n        \"ShipWeight\": 1,\n        \"ShipHeight\": null,\n        \"ShipWidth\": null,\n        \"ShipLength\": null,\n        \"xp\": {\n          \"test\": false\n        }\n      }</code></li>\n</ul>",
                    "<li>We've added a new sub-object to the LineItem object. Now, when you list LineItems, you'll see the products that are on the lineitem too. This currently does not include the full price break information.\n    <em>New Line Item Object Example</em>:\n    <code>{\n      \"ID\": \"6-Ap0yfJ6k2kDxEJhPA4432vjA\",\n      \"ProductID\": \"Test01\",\n      \"Quantity\": 5,\n      \"DateAdded\": \"2016-05-19T17:51:46.127+00:00\",\n      \"QuantityShipped\": 0,\n      \"UnitPrice\": null,\n      \"LineTotal\": 0,\n      \"CostCenter\": null,\n      \"DateNeeded\": null,\n      \"ShippingAccount\": null,\n      \"ShippingAddressID\": \"2WRMZMDcakaVaoJ6Hf_r1w\",\n      \"ShipFromAddressID\": null,\n      \"Product\": {\n        \"ID\": \"Test01\",\n        \"Name\": \"Test01\",\n        \"Description\": \"Test01 Lorem Ipsum\",\n        \"QuantityMultiplier\": 1,\n        \"ShipWeight\": 1,\n        \"ShipHeight\": null,\n        \"ShipWidth\": null,\n        \"ShipLength\": null,\n        \"xp\": {\n          \"test\": false\n        }\n      }</code></li>",
                    "<em>New Line Item Object Example</em>",
                    "<code>{\n      \"ID\": \"6-Ap0yfJ6k2kDxEJhPA4432vjA\",\n      \"ProductID\": \"Test01\",\n      \"Quantity\": 5,\n      \"DateAdded\": \"2016-05-19T17:51:46.127+00:00\",\n      \"QuantityShipped\": 0,\n      \"UnitPrice\": null,\n      \"LineTotal\": 0,\n      \"CostCenter\": null,\n      \"DateNeeded\": null,\n      \"ShippingAccount\": null,\n      \"ShippingAddressID\": \"2WRMZMDcakaVaoJ6Hf_r1w\",\n      \"ShipFromAddressID\": null,\n      \"Product\": {\n        \"ID\": \"Test01\",\n        \"Name\": \"Test01\",\n        \"Description\": \"Test01 Lorem Ipsum\",\n        \"QuantityMultiplier\": 1,\n        \"ShipWeight\": 1,\n        \"ShipHeight\": null,\n        \"ShipWidth\": null,\n        \"ShipLength\": null,\n        \"xp\": {\n          \"test\": false\n        }\n      }</code>",
                    "<h3>Shipping Rates Integration</h3>",
                    "<ul>\n<li>We've added UPS account configuration options to the Shipping Rates integration.</li>\n<li>We've added the option to adjust (as an admin) rates that are displayed to users by either a percentage or a flat rate, either at a global or carrier level.</li>\n<li>You can now add a manual shipper as well, to account for another kind of shipper than USPS or UPS.</li>\n</ul>",
                    "<li>We've added UPS account configuration options to the Shipping Rates integration.</li>",
                    "<li>We've added the option to adjust (as an admin) rates that are displayed to users by either a percentage or a flat rate, either at a global or carrier level.</li>",
                    "<li>You can now add a manual shipper as well, to account for another kind of shipper than USPS or UPS.</li>",
                    "<h3>Authorize.net</h3>",
                    "<ul>\n<li>We're storing the partial card number for single use card payments in the Payment object's XP, so it can be used in the refund transaction.</li>\n</ul>",
                    "<li>We're storing the partial card number for single use card payments in the Payment object's XP, so it can be used in the refund transaction.</li>",
                    "<h2>Bug Fixes</h2>",
                    "<ul>\n<li>You can't see expired Spending Accounts in the User Perspective Spending Account list, and you can't use one to make a new payment either.</li>\n<li>You can create a payment that exceeds the Spending Account balance if and only if the Spending Account Assignment for the relevant party has <code>AllowExceed</code> set to <code>true</code>.</li>\n<li>Speaking of price schedules, you can now set a minimum quantity, even when the quantity is not restricted to particular breaks. So, you can now say someone has to order <em>at least</em> 5 products, but they don't have to order only 10, 20, or 30, for example.</li>\n<li>A buyer user without elevated permissions cannot cancel their completed orders. (\u0e51\u2022\u0300\u3142\u2022\u0301)\u0648</li>\n</ul>",
                    "<li>You can't see expired Spending Accounts in the User Perspective Spending Account list, and you can't use one to make a new payment either.</li>",
                    "<li>You can create a payment that exceeds the Spending Account balance if and only if the Spending Account Assignment for the relevant party has <code>AllowExceed</code> set to <code>true</code>.</li>",
                    "<code>AllowExceed</code>",
                    "<code>true</code>",
                    "<li>Speaking of price schedules, you can now set a minimum quantity, even when the quantity is not restricted to particular breaks. So, you can now say someone has to order <em>at least</em> 5 products, but they don't have to order only 10, 20, or 30, for example.</li>",
                    "<em>at least</em>",
                    "<li>A buyer user without elevated permissions cannot cancel their completed orders. (\u0e51\u2022\u0300\u3142\u2022\u0301)\u0648</li>",
                    "<h3>Mandrill Integration</h3>",
                    "<ul>\n<li>We've fixed an issue with the Date Submitted variable for Orders not getting pulled into Mandrill email templates properly.</li>\n</ul>",
                    "<li>We've fixed an issue with the Date Submitted variable for Orders not getting pulled into Mandrill email templates properly.</li>",
                    "<h3>Authorize.net</h3>",
                    "<ul>\n<li>We've fixed the partial UpdateCreditCard to stop overwriting the CardholderName with <code>null</code>. </li>\n</ul>",
                    "<li>We've fixed the partial UpdateCreditCard to stop overwriting the CardholderName with <code>null</code>. </li>",
                    "<code>null</code>",
                    "<h2>Client Libraries</h2>"
                ],
                "Bug Fixes": [
                    "<ul>\n<li>You can't see expired Spending Accounts in the User Perspective Spending Account list, and you can't use one to make a new payment either.</li>\n<li>You can create a payment that exceeds the Spending Account balance if and only if the Spending Account Assignment for the relevant party has <code>AllowExceed</code> set to <code>true</code>.</li>\n<li>Speaking of price schedules, you can now set a minimum quantity, even when the quantity is not restricted to particular breaks. So, you can now say someone has to order <em>at least</em> 5 products, but they don't have to order only 10, 20, or 30, for example.</li>\n<li>A buyer user without elevated permissions cannot cancel their completed orders. (\u0e51\u2022\u0300\u3142\u2022\u0301)\u0648</li>\n</ul>",
                    "<li>You can't see expired Spending Accounts in the User Perspective Spending Account list, and you can't use one to make a new payment either.</li>",
                    "<li>You can create a payment that exceeds the Spending Account balance if and only if the Spending Account Assignment for the relevant party has <code>AllowExceed</code> set to <code>true</code>.</li>",
                    "<code>AllowExceed</code>",
                    "<code>true</code>",
                    "<li>Speaking of price schedules, you can now set a minimum quantity, even when the quantity is not restricted to particular breaks. So, you can now say someone has to order <em>at least</em> 5 products, but they don't have to order only 10, 20, or 30, for example.</li>",
                    "<em>at least</em>",
                    "<li>A buyer user without elevated permissions cannot cancel their completed orders. (\u0e51\u2022\u0300\u3142\u2022\u0301)\u0648</li>",
                    "<h3>Mandrill Integration</h3>",
                    "<ul>\n<li>We've fixed an issue with the Date Submitted variable for Orders not getting pulled into Mandrill email templates properly.</li>\n</ul>",
                    "<li>We've fixed an issue with the Date Submitted variable for Orders not getting pulled into Mandrill email templates properly.</li>",
                    "<h3>Authorize.net</h3>",
                    "<ul>\n<li>We've fixed the partial UpdateCreditCard to stop overwriting the CardholderName with <code>null</code>. </li>\n</ul>",
                    "<li>We've fixed the partial UpdateCreditCard to stop overwriting the CardholderName with <code>null</code>. </li>",
                    "<code>null</code>",
                    "<h2>Client Libraries</h2>"
                ],
                "Client Libraries": []
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.37",
                "Date": "01/31/2017"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>We've fixed an issue where, if a product on an lineitem has required specs, but no specs are filled out and there's no default, the line item create is successful. Instead, now an error is thrown with with the missing specs.</li>\n<li>You should now be able to successfully set a string as a spec value on a lineitem if the product on the lineitem allows open text.</li>\n<li>If a buyer user has a private credit card <strong>and</strong> elevated roles (<code>FullAccess</code>, <code>CreditCardReader</code> &amp; <code>OrderAdmin</code>, for example), you'll be able to create a payment on the private credit card without errors.</li>\n<li>Admin listing endpoints for assignments (<code>listProductAssignments</code>, etc) will no longer return assignments for deleted buyers. </li>\n</ul>",
                    "<li>We've fixed an issue where, if a product on an lineitem has required specs, but no specs are filled out and there's no default, the line item create is successful. Instead, now an error is thrown with with the missing specs.</li>",
                    "<li>You should now be able to successfully set a string as a spec value on a lineitem if the product on the lineitem allows open text.</li>",
                    "<li>If a buyer user has a private credit card <strong>and</strong> elevated roles (<code>FullAccess</code>, <code>CreditCardReader</code> &amp; <code>OrderAdmin</code>, for example), you'll be able to create a payment on the private credit card without errors.</li>",
                    "<strong>and</strong>",
                    "<code>FullAccess</code>",
                    "<code>CreditCardReader</code>",
                    "<code>OrderAdmin</code>",
                    "<li>Admin listing endpoints for assignments (<code>listProductAssignments</code>, etc) will no longer return assignments for deleted buyers. </li>",
                    "<code>listProductAssignments</code>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.38",
                "Date": "2/5/2017"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>Several performance improvements around Product and Product Inventory </li>\n<li>We've added a <code>FromCompanyID</code> to the <code>Order</code> object, and you can filter on it, so that orders from different companies can be easily identified.</li>\n</ul>",
                    "<li>Several performance improvements around Product and Product Inventory </li>",
                    "<li>We've added a <code>FromCompanyID</code> to the <code>Order</code> object, and you can filter on it, so that orders from different companies can be easily identified.</li>",
                    "<code>FromCompanyID</code>",
                    "<code>Order</code>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.39",
                "Date": "2/9/2017"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>Fixed an issue where occasionally, if you added valid promo on an order, you would not be able to update the order afterwards.</li>\n</ul>",
                    "<li>Fixed an issue where occasionally, if you added valid promo on an order, you would not be able to update the order afterwards.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.40",
                "Date": "2/23/2017"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>Fixed an issue where you couldn't update a Category's <code>ParentID</code> to null</li>\n<li>Fixed a bug around promotions with value expressions evaluating <code>product.incategory</code></li>\n<li>Removed some <code>ApprovalRule</code> fields related to features that don't exist yet.</li>\n<li>Fixed a tricksy bug where in some situations, the <code>Meta</code> of a list would change if the <code>pageSize</code> changed.</li>\n<li>You now get a much more helpful error if you try to assign a price to a product that doesn't exist.</li>\n</ul>",
                    "<li>Fixed an issue where you couldn't update a Category's <code>ParentID</code> to null</li>",
                    "<code>ParentID</code>",
                    "<li>Fixed a bug around promotions with value expressions evaluating <code>product.incategory</code></li>",
                    "<code>product.incategory</code>",
                    "<li>Removed some <code>ApprovalRule</code> fields related to features that don't exist yet.</li>",
                    "<code>ApprovalRule</code>",
                    "<li>Fixed a tricksy bug where in some situations, the <code>Meta</code> of a list would change if the <code>pageSize</code> changed.</li>",
                    "<code>Meta</code>",
                    "<code>pageSize</code>",
                    "<li>You now get a much more helpful error if you try to assign a price to a product that doesn't exist.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.41",
                "Date": "03/03/2017"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>Fixed an issue where the Reset Password Token didn't expire. Now expires after two hour.</li>\n<li>Fixed an issue around Promotions with value expressions containing <code>product.incategory</code></li>\n<li>Fixed an issue where you couldn't delete orders after they'd been approved.</li>\n<li>Fixed an issue where you'd get a 500 instead of a useful error if you submit an order without specs if the order contained a specc'd product</li>\n<li>Fixed an issue where you got a 500 instead of a useful error if you tried to assign a non-existent user to an admin group</li>\n<li>Improved large value handling in unit prices</li>\n<li>You now (correctly) need <code>ApprovalRuleAdmin</code> and <code>ApprovalRuleReader</code> to admin/read approval rules and not <code>AddressReader</code>.</li>\n</ul>",
                    "<li>Fixed an issue where the Reset Password Token didn't expire. Now expires after two hour.</li>",
                    "<li>Fixed an issue around Promotions with value expressions containing <code>product.incategory</code></li>",
                    "<code>product.incategory</code>",
                    "<li>Fixed an issue where you couldn't delete orders after they'd been approved.</li>",
                    "<li>Fixed an issue where you'd get a 500 instead of a useful error if you submit an order without specs if the order contained a specc'd product</li>",
                    "<li>Fixed an issue where you got a 500 instead of a useful error if you tried to assign a non-existent user to an admin group</li>",
                    "<li>Improved large value handling in unit prices</li>",
                    "<li>You now (correctly) need <code>ApprovalRuleAdmin</code> and <code>ApprovalRuleReader</code> to admin/read approval rules and not <code>AddressReader</code>.</li>",
                    "<code>ApprovalRuleAdmin</code>",
                    "<code>ApprovalRuleReader</code>",
                    "<code>AddressReader</code>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.42",
                "Date": "03/09/2017"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>Fixed a couple issues where markups on product specs were not being correctly reflected in lineitem totals.</li>\n<li>XP filtering on buyers is now fixed.</li>\n<li>Delete webhook firing issue is fixed.</li>\n</ul>",
                    "<li>Fixed a couple issues where markups on product specs were not being correctly reflected in lineitem totals.</li>",
                    "<li>XP filtering on buyers is now fixed.</li>",
                    "<li>Delete webhook firing issue is fixed.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.43",
                "Date": "04/05/2017"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>We now round the following to two decimal places:<ul>\n<li><code>OrderPromotion.Amount</code></li>\n<li><code>LineItem.LineTotal</code></li>\n<li><code>Order.Subtotal</code></li>\n<li><code>Order.ShippingCost</code></li>\n<li><code>Order.TaxCost</code></li>\n<li><code>Order.PromotionDiscount</code></li>\n<li><code>SpendingAccount.Balance</code></li>\n<li><code>Shipment.Cost</code></li>\n<li><code>Payment.Amount</code></li>\n<li><code>PaymentTransaction.Amount</code></li>\n</ul>\n</li>\n<li>We now return a useful and informative error message if you try to list <code>CatalogAssignments</code> without required parameters.</li>\n<li>We now return a useful and informative error message if you try to delete a user who has an open order outstanding.</li>\n<li>We now decrement <code>SpendingAccounts</code> on delete of a payment and not if it's just routed for approval. </li>\n</ul>",
                    "<li>We now round the following to two decimal places:<ul>\n<li><code>OrderPromotion.Amount</code></li>\n<li><code>LineItem.LineTotal</code></li>\n<li><code>Order.Subtotal</code></li>\n<li><code>Order.ShippingCost</code></li>\n<li><code>Order.TaxCost</code></li>\n<li><code>Order.PromotionDiscount</code></li>\n<li><code>SpendingAccount.Balance</code></li>\n<li><code>Shipment.Cost</code></li>\n<li><code>Payment.Amount</code></li>\n<li><code>PaymentTransaction.Amount</code></li>\n</ul>\n</li>",
                    "<ul>\n<li><code>OrderPromotion.Amount</code></li>\n<li><code>LineItem.LineTotal</code></li>\n<li><code>Order.Subtotal</code></li>\n<li><code>Order.ShippingCost</code></li>\n<li><code>Order.TaxCost</code></li>\n<li><code>Order.PromotionDiscount</code></li>\n<li><code>SpendingAccount.Balance</code></li>\n<li><code>Shipment.Cost</code></li>\n<li><code>Payment.Amount</code></li>\n<li><code>PaymentTransaction.Amount</code></li>\n</ul>",
                    "<li><code>OrderPromotion.Amount</code></li>",
                    "<code>OrderPromotion.Amount</code>",
                    "<li><code>LineItem.LineTotal</code></li>",
                    "<code>LineItem.LineTotal</code>",
                    "<li><code>Order.Subtotal</code></li>",
                    "<code>Order.Subtotal</code>",
                    "<li><code>Order.ShippingCost</code></li>",
                    "<code>Order.ShippingCost</code>",
                    "<li><code>Order.TaxCost</code></li>",
                    "<code>Order.TaxCost</code>",
                    "<li><code>Order.PromotionDiscount</code></li>",
                    "<code>Order.PromotionDiscount</code>",
                    "<li><code>SpendingAccount.Balance</code></li>",
                    "<code>SpendingAccount.Balance</code>",
                    "<li><code>Shipment.Cost</code></li>",
                    "<code>Shipment.Cost</code>",
                    "<li><code>Payment.Amount</code></li>",
                    "<code>Payment.Amount</code>",
                    "<li><code>PaymentTransaction.Amount</code></li>",
                    "<code>PaymentTransaction.Amount</code>",
                    "<li>We now return a useful and informative error message if you try to list <code>CatalogAssignments</code> without required parameters.</li>",
                    "<code>CatalogAssignments</code>",
                    "<li>We now return a useful and informative error message if you try to delete a user who has an open order outstanding.</li>",
                    "<li>We now decrement <code>SpendingAccounts</code> on delete of a payment and not if it's just routed for approval. </li>",
                    "<code>SpendingAccounts</code>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.44",
                "Date": "04/17/2017"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>Fixed a bug where, in some particular cases, a user who submitted an order could also approve it.</li>\n</ul>",
                    "<li>Fixed a bug where, in some particular cases, a user who submitted an order could also approve it.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.50",
                "Date": "05/04/2017"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>Payments have a new boolean field, <code>Accepted</code>. <code>PUT</code> has been removed from Payments, and <code>PATCH</code> can never edit <code>Type</code>, <code>CreditCardID</code>, and <code>SpendingAccountID</code>.<ul>\n<li>Only users with OrderAdmin or FullAccess roles will be able to create or update the <code>Accepted</code> property.</li>\n<li>If the <code>Accepted</code> property is true AND the order has been submited, a Shopper cannot patch the payment but a user with OrderAdmin or FullAccess can.</li>\n<li>If the <code>Accepted</code> property is true AND the payment type is a credit card, a Shopper cannot patch the payment but a user with OrderAdmin or FullAccess can.</li>\n<li>If the <code>Accepted</code> property is true, the order has not been submitted, and the payment type is not a credit card, either a Shopper or OrderAdmin CAN patch the payment.</li>\n<li>If <code>Accepted</code> is false, any user with either role can patch all other fields except the 3 listed above.</li>\n</ul>\n</li>\n<li>As part of the data conversion for existing payments, <code>Accepted</code> will be set to true for the following:<ul>\n<li>All non-credit card payments (spending accounts, POs)</li>\n<li>All orders that were ever submitted (open, completed, seller-canceled)</li>\n<li>All payments containing a successful PaymentTransaction</li>\n</ul>\n</li>\n<li><code>PUT</code> has been removed from payments. <code>PATCH</code> is allowed, but only to patch the <code>Accepted</code> property, and only if the user has <code>OrderAdmin</code> or <code>FullAccess</code>.</li>\n<li>Order submit logic will validate Payment.Accepted=true and an error will be thrown if an order with an unaccepted payment is submitted.</li>\n<li>Previously, any admin user could impersonate any buyer user. Going forward, an admin user must have the <code>BuyerImpersonation</code> role in their security profile to impersonate buyer users and request the role when impersonating a user.</li>\n<li>Due to refactoring around our password hash algorithm, and since we do not store users' passwords ourselves, but simply a hash of the password, <strong>users will need to reset their passwords before they can log into the OrderCloud DevCenter or any OrderCloud apps</strong>. When you authenticate to the Ordercloud API initially after this release, the only role your user will have is the <code>PasswordReset</code> role, and after you've reset your password, you'll need to re-authenticate to get your full array of roles. <ul>\n<li>If you provide an application to users, we recommend have the application redirect any user who authenticates and only has the <code>PasswordReset</code> role to be redirected to a different view, where their password can be reset using the new <code>/me/password</code> endpoint.</li>\n<li>Alternately, any user can trigger an email-based password reset, using the <a href=\"https://staging-documentation.herokuapp.com/api-reference#PasswordResets\">Forgotten Password</a> endpoint. </li>\n</ul>\n</li>\n<li>Due to the aforementioned password changes, DevCenter users will need to reset their DevCenter passwords by going to the \"Forgot Password\" link in DevCenter. Users will need to do this in the Staging Environment <em>and</em> in Prod after the production release. </li>\n<li>Added roles that control who can list or edit shipments. Now users with <code>ShipmentAdmin</code> <em>or</em> <code>OrderAdmin</code> can create or edit shipments. Users with <code>ShipmentReader</code> or <code>OrderReader</code> can get/list shipments.</li>\n<li>Seller-side product lists (<code>v1/products</code>) can now be filtered on <code>CatalogID</code> and <code>CategoryID</code> (<code>CategoryID</code> is unique only within a Catalog, so you must specify both in order to filter on Category.)</li>\n<li>Buyer-side product lists (<code>v1/me/products</code>) that specify <code>CategoryID</code> can also specify <code>depth</code>, which can be an integer 1 or greater (<code>depth=1</code> means products directly assigned to category) or <code>all</code>. Default is <code>all</code>. </li>\n<li>An order that requires approval can now be sent back to the submitting user by the approver user for editing and re-submission. See <a href=\"https://staging-documentation.herokuapp.com/api-reference#Orders_Decline\">Decline Orders</a> for more details. </li>\n<li>We are changing the route to register an anonymous user (previously called \"Create From Temp User\") to <code>PUT</code> <code>v1/me/register</code>. This will help make our Swagger spec more flexible.</li>\n<li>Any buyer user can now list shipments for their own orders in a User Perspective route, <code>me/shipments</code>. No more need for elevated permissions!</li>\n<li>In order to encourage best practices, only group-level and buyer-level assignments will be allowed for the following resources:<ul>\n<li>Products</li>\n<li>Categories</li>\n<li>Promotions</li>\n<li>Cost Centers</li>\n<li>Message Config</li>\n</ul>\n</li>\n</ul>",
                    "<li>Payments have a new boolean field, <code>Accepted</code>. <code>PUT</code> has been removed from Payments, and <code>PATCH</code> can never edit <code>Type</code>, <code>CreditCardID</code>, and <code>SpendingAccountID</code>.<ul>\n<li>Only users with OrderAdmin or FullAccess roles will be able to create or update the <code>Accepted</code> property.</li>\n<li>If the <code>Accepted</code> property is true AND the order has been submited, a Shopper cannot patch the payment but a user with OrderAdmin or FullAccess can.</li>\n<li>If the <code>Accepted</code> property is true AND the payment type is a credit card, a Shopper cannot patch the payment but a user with OrderAdmin or FullAccess can.</li>\n<li>If the <code>Accepted</code> property is true, the order has not been submitted, and the payment type is not a credit card, either a Shopper or OrderAdmin CAN patch the payment.</li>\n<li>If <code>Accepted</code> is false, any user with either role can patch all other fields except the 3 listed above.</li>\n</ul>\n</li>",
                    "<code>Accepted</code>",
                    "<code>PUT</code>",
                    "<code>PATCH</code>",
                    "<code>Type</code>",
                    "<code>CreditCardID</code>",
                    "<code>SpendingAccountID</code>",
                    "<ul>\n<li>Only users with OrderAdmin or FullAccess roles will be able to create or update the <code>Accepted</code> property.</li>\n<li>If the <code>Accepted</code> property is true AND the order has been submited, a Shopper cannot patch the payment but a user with OrderAdmin or FullAccess can.</li>\n<li>If the <code>Accepted</code> property is true AND the payment type is a credit card, a Shopper cannot patch the payment but a user with OrderAdmin or FullAccess can.</li>\n<li>If the <code>Accepted</code> property is true, the order has not been submitted, and the payment type is not a credit card, either a Shopper or OrderAdmin CAN patch the payment.</li>\n<li>If <code>Accepted</code> is false, any user with either role can patch all other fields except the 3 listed above.</li>\n</ul>",
                    "<li>Only users with OrderAdmin or FullAccess roles will be able to create or update the <code>Accepted</code> property.</li>",
                    "<code>Accepted</code>",
                    "<li>If the <code>Accepted</code> property is true AND the order has been submited, a Shopper cannot patch the payment but a user with OrderAdmin or FullAccess can.</li>",
                    "<code>Accepted</code>",
                    "<li>If the <code>Accepted</code> property is true AND the payment type is a credit card, a Shopper cannot patch the payment but a user with OrderAdmin or FullAccess can.</li>",
                    "<code>Accepted</code>",
                    "<li>If the <code>Accepted</code> property is true, the order has not been submitted, and the payment type is not a credit card, either a Shopper or OrderAdmin CAN patch the payment.</li>",
                    "<code>Accepted</code>",
                    "<li>If <code>Accepted</code> is false, any user with either role can patch all other fields except the 3 listed above.</li>",
                    "<code>Accepted</code>",
                    "<li>As part of the data conversion for existing payments, <code>Accepted</code> will be set to true for the following:<ul>\n<li>All non-credit card payments (spending accounts, POs)</li>\n<li>All orders that were ever submitted (open, completed, seller-canceled)</li>\n<li>All payments containing a successful PaymentTransaction</li>\n</ul>\n</li>",
                    "<code>Accepted</code>",
                    "<ul>\n<li>All non-credit card payments (spending accounts, POs)</li>\n<li>All orders that were ever submitted (open, completed, seller-canceled)</li>\n<li>All payments containing a successful PaymentTransaction</li>\n</ul>",
                    "<li>All non-credit card payments (spending accounts, POs)</li>",
                    "<li>All orders that were ever submitted (open, completed, seller-canceled)</li>",
                    "<li>All payments containing a successful PaymentTransaction</li>",
                    "<li><code>PUT</code> has been removed from payments. <code>PATCH</code> is allowed, but only to patch the <code>Accepted</code> property, and only if the user has <code>OrderAdmin</code> or <code>FullAccess</code>.</li>",
                    "<code>PUT</code>",
                    "<code>PATCH</code>",
                    "<code>Accepted</code>",
                    "<code>OrderAdmin</code>",
                    "<code>FullAccess</code>",
                    "<li>Order submit logic will validate Payment.Accepted=true and an error will be thrown if an order with an unaccepted payment is submitted.</li>",
                    "<li>Previously, any admin user could impersonate any buyer user. Going forward, an admin user must have the <code>BuyerImpersonation</code> role in their security profile to impersonate buyer users and request the role when impersonating a user.</li>",
                    "<code>BuyerImpersonation</code>",
                    "<li>Due to refactoring around our password hash algorithm, and since we do not store users' passwords ourselves, but simply a hash of the password, <strong>users will need to reset their passwords before they can log into the OrderCloud DevCenter or any OrderCloud apps</strong>. When you authenticate to the Ordercloud API initially after this release, the only role your user will have is the <code>PasswordReset</code> role, and after you've reset your password, you'll need to re-authenticate to get your full array of roles. <ul>\n<li>If you provide an application to users, we recommend have the application redirect any user who authenticates and only has the <code>PasswordReset</code> role to be redirected to a different view, where their password can be reset using the new <code>/me/password</code> endpoint.</li>\n<li>Alternately, any user can trigger an email-based password reset, using the <a href=\"https://staging-documentation.herokuapp.com/api-reference#PasswordResets\">Forgotten Password</a> endpoint. </li>\n</ul>\n</li>",
                    "<strong>users will need to reset their passwords before they can log into the OrderCloud DevCenter or any OrderCloud apps</strong>",
                    "<code>PasswordReset</code>",
                    "<ul>\n<li>If you provide an application to users, we recommend have the application redirect any user who authenticates and only has the <code>PasswordReset</code> role to be redirected to a different view, where their password can be reset using the new <code>/me/password</code> endpoint.</li>\n<li>Alternately, any user can trigger an email-based password reset, using the <a href=\"https://staging-documentation.herokuapp.com/api-reference#PasswordResets\">Forgotten Password</a> endpoint. </li>\n</ul>",
                    "<li>If you provide an application to users, we recommend have the application redirect any user who authenticates and only has the <code>PasswordReset</code> role to be redirected to a different view, where their password can be reset using the new <code>/me/password</code> endpoint.</li>",
                    "<code>PasswordReset</code>",
                    "<code>/me/password</code>",
                    "<li>Alternately, any user can trigger an email-based password reset, using the <a href=\"https://staging-documentation.herokuapp.com/api-reference#PasswordResets\">Forgotten Password</a> endpoint. </li>",
                    "<a href=\"https://staging-documentation.herokuapp.com/api-reference#PasswordResets\">Forgotten Password</a>",
                    "<li>Due to the aforementioned password changes, DevCenter users will need to reset their DevCenter passwords by going to the \"Forgot Password\" link in DevCenter. Users will need to do this in the Staging Environment <em>and</em> in Prod after the production release. </li>",
                    "<em>and</em>",
                    "<li>Added roles that control who can list or edit shipments. Now users with <code>ShipmentAdmin</code> <em>or</em> <code>OrderAdmin</code> can create or edit shipments. Users with <code>ShipmentReader</code> or <code>OrderReader</code> can get/list shipments.</li>",
                    "<code>ShipmentAdmin</code>",
                    "<em>or</em>",
                    "<code>OrderAdmin</code>",
                    "<code>ShipmentReader</code>",
                    "<code>OrderReader</code>",
                    "<li>Seller-side product lists (<code>v1/products</code>) can now be filtered on <code>CatalogID</code> and <code>CategoryID</code> (<code>CategoryID</code> is unique only within a Catalog, so you must specify both in order to filter on Category.)</li>",
                    "<code>v1/products</code>",
                    "<code>CatalogID</code>",
                    "<code>CategoryID</code>",
                    "<code>CategoryID</code>",
                    "<li>Buyer-side product lists (<code>v1/me/products</code>) that specify <code>CategoryID</code> can also specify <code>depth</code>, which can be an integer 1 or greater (<code>depth=1</code> means products directly assigned to category) or <code>all</code>. Default is <code>all</code>. </li>",
                    "<code>v1/me/products</code>",
                    "<code>CategoryID</code>",
                    "<code>depth</code>",
                    "<code>depth=1</code>",
                    "<code>all</code>",
                    "<code>all</code>",
                    "<li>An order that requires approval can now be sent back to the submitting user by the approver user for editing and re-submission. See <a href=\"https://staging-documentation.herokuapp.com/api-reference#Orders_Decline\">Decline Orders</a> for more details. </li>",
                    "<a href=\"https://staging-documentation.herokuapp.com/api-reference#Orders_Decline\">Decline Orders</a>",
                    "<li>We are changing the route to register an anonymous user (previously called \"Create From Temp User\") to <code>PUT</code> <code>v1/me/register</code>. This will help make our Swagger spec more flexible.</li>",
                    "<code>PUT</code>",
                    "<code>v1/me/register</code>",
                    "<li>Any buyer user can now list shipments for their own orders in a User Perspective route, <code>me/shipments</code>. No more need for elevated permissions!</li>",
                    "<code>me/shipments</code>",
                    "<li>In order to encourage best practices, only group-level and buyer-level assignments will be allowed for the following resources:<ul>\n<li>Products</li>\n<li>Categories</li>\n<li>Promotions</li>\n<li>Cost Centers</li>\n<li>Message Config</li>\n</ul>\n</li>",
                    "<ul>\n<li>Products</li>\n<li>Categories</li>\n<li>Promotions</li>\n<li>Cost Centers</li>\n<li>Message Config</li>\n</ul>",
                    "<li>Products</li>",
                    "<li>Categories</li>",
                    "<li>Promotions</li>",
                    "<li>Cost Centers</li>",
                    "<li>Message Config</li>",
                    "<p><strong>If there are existing user-level assignments for any of the above, you must convert them to group- or buyer-level before the production release date</strong>.</p>",
                    "<strong>If there are existing user-level assignments for any of the above, you must convert them to group- or buyer-level before the production release date</strong>",
                    "<ul>\n<li><code>OrderApproval</code> now contains nested <code>Approver</code> object containing all details of the approving user. Example:\n<code>{\n    \"ApprovalRuleID\": \"...\",\n    \"ApprovingGroupID\": \"...\",\n    \"Status\": \"Pending\",\n    \"DateCreated\": \"...\",\n    \"DateCompleted\": \"...\",\n    \"Approver\":\n    {\n        \"ID\": \"...\",\n        \"FirstName\": \"...\",\n        \"LastName\": \"...\",\n        \"UserName\": \"...\",\n        \"Email\": \"...\",\n        \"Active\": \"...\",\n        \"xp\" : { ... }\n    },\n    \"Comments\": \"...\"\n}</code></li>\n<li>We have also moved approval comments out of the URL query string and into the request body. There is a maximum length of 2000 characters.</li>\n<li>We have added new roles around the administration of Admin Addresses: <code>AdminAddressReader</code> and <code>AdminAddressAdmin</code>.</li>\n</ul>",
                    "<li><code>OrderApproval</code> now contains nested <code>Approver</code> object containing all details of the approving user. Example:\n<code>{\n    \"ApprovalRuleID\": \"...\",\n    \"ApprovingGroupID\": \"...\",\n    \"Status\": \"Pending\",\n    \"DateCreated\": \"...\",\n    \"DateCompleted\": \"...\",\n    \"Approver\":\n    {\n        \"ID\": \"...\",\n        \"FirstName\": \"...\",\n        \"LastName\": \"...\",\n        \"UserName\": \"...\",\n        \"Email\": \"...\",\n        \"Active\": \"...\",\n        \"xp\" : { ... }\n    },\n    \"Comments\": \"...\"\n}</code></li>",
                    "<code>OrderApproval</code>",
                    "<code>Approver</code>",
                    "<code>{\n    \"ApprovalRuleID\": \"...\",\n    \"ApprovingGroupID\": \"...\",\n    \"Status\": \"Pending\",\n    \"DateCreated\": \"...\",\n    \"DateCompleted\": \"...\",\n    \"Approver\":\n    {\n        \"ID\": \"...\",\n        \"FirstName\": \"...\",\n        \"LastName\": \"...\",\n        \"UserName\": \"...\",\n        \"Email\": \"...\",\n        \"Active\": \"...\",\n        \"xp\" : { ... }\n    },\n    \"Comments\": \"...\"\n}</code>",
                    "<li>We have also moved approval comments out of the URL query string and into the request body. There is a maximum length of 2000 characters.</li>",
                    "<li>We have added new roles around the administration of Admin Addresses: <code>AdminAddressReader</code> and <code>AdminAddressAdmin</code>.</li>",
                    "<code>AdminAddressReader</code>",
                    "<code>AdminAddressAdmin</code>",
                    "<h3>Inventory Revamp</h3>",
                    "<ul>\n<li>Inventory-related data points on <code>Product</code> are being moved into a nested <code>Inventory</code> object.</li>\n</ul>",
                    "<li>Inventory-related data points on <code>Product</code> are being moved into a nested <code>Inventory</code> object.</li>",
                    "<code>Product</code>",
                    "<code>Inventory</code>",
                    "<h4>Summary of Inventory Object Changes:</h4>",
                    "<p>| Old                                       | New                                    |\n|-------------------------------------------|----------------------------------------|\n| Product.InventoryEnabled                  | Product.Inventory.Enabled              |\n| Product.InventoryNotificationPoint        | Product.Inventory.NotificationPoint    |\n| Product.VarientLevelInventory             | Product.Inventory.VariantLevelTracking |\n| Product.AllowOrderExceedInventory         | Product.Inventory.OrderCanExceed       |\n| Product.InventoryVisible                  | <em>removed</em>                              |\n| <code>/products/:id/inventory</code> resource        | <em>removed</em>                              |\n| Inventory.Available                       | Product.Inventory.QuantityAvailable    |\n| Inventory.LastUpdated                     | Product.Inventory.LastUpdated          |\n| Inventory.ID                              | <em>removed</em>                              |\n| Inventory.Name                            | <em>removed</em>                              |\n| Inventory.Reserved                        | <em>removed</em>                              |\n| <code>/products/:id/inventory</code>                 | <em>removed</em>                              |</p>",
                    "<em>removed</em>",
                    "<code>/products/:id/inventory</code>",
                    "<em>removed</em>",
                    "<em>removed</em>",
                    "<em>removed</em>",
                    "<em>removed</em>",
                    "<code>/products/:id/inventory</code>",
                    "<em>removed</em>",
                    "<h4>Summary of Inventory Behavioral Changes:</h4>",
                    "<ul>\n<li><code>Product.Inventory.QuantityAvailable</code> is writable.</li>\n<li><code>PATCH v1/products/:id { \"Inventory\": { \"QuantityAvailable\": 999 } }</code> is the preferred way to manually set inventory.</li>\n<li><code>QuantityAvailable</code> is deducted on order submit or final order approval (whichever point order status changes to <code>Open</code>).</li>\n<li><code>QuantityAvailable</code> is adjusted when quantity changes are made to line items on <code>Open</code> orders.</li>\n<li><code>QuantityAvailable</code> is validated, but not adjusted, when items are added or quantities change on <code>Unsubmitted</code> orders. A 400 error occurs if item quantity exceeds available inventory and <code>Product.Inventory.OrderCanExceed</code> is false.</li>\n<li><code>QuantityAvailable</code> is always re-validated per the rules above on order submit.</li>\n</ul>",
                    "<li><code>Product.Inventory.QuantityAvailable</code> is writable.</li>",
                    "<code>Product.Inventory.QuantityAvailable</code>",
                    "<li><code>PATCH v1/products/:id { \"Inventory\": { \"QuantityAvailable\": 999 } }</code> is the preferred way to manually set inventory.</li>",
                    "<code>PATCH v1/products/:id { \"Inventory\": { \"QuantityAvailable\": 999 } }</code>",
                    "<li><code>QuantityAvailable</code> is deducted on order submit or final order approval (whichever point order status changes to <code>Open</code>).</li>",
                    "<code>QuantityAvailable</code>",
                    "<code>Open</code>",
                    "<li><code>QuantityAvailable</code> is adjusted when quantity changes are made to line items on <code>Open</code> orders.</li>",
                    "<code>QuantityAvailable</code>",
                    "<code>Open</code>",
                    "<li><code>QuantityAvailable</code> is validated, but not adjusted, when items are added or quantities change on <code>Unsubmitted</code> orders. A 400 error occurs if item quantity exceeds available inventory and <code>Product.Inventory.OrderCanExceed</code> is false.</li>",
                    "<code>QuantityAvailable</code>",
                    "<code>Unsubmitted</code>",
                    "<code>Product.Inventory.OrderCanExceed</code>",
                    "<li><code>QuantityAvailable</code> is always re-validated per the rules above on order submit.</li>",
                    "<code>QuantityAvailable</code>",
                    "<h3>Shipment Changes</h3>",
                    "<ul>\n<li>The nested <code>Shipment.Items</code> collection has been removed, and shipment items are instead retrieved or saved via new endpoints, much like line items. </li>\n<li>To compensate for the above, there is a new <code>me/shipmentitems</code> endpoint.</li>\n<li><code>BuyerID</code> has been removed from routes, meaning you can list shipments across multiple buyers. </li>\n<li>Shipment IDs are now seller-unique.</li>\n<li>All new fields listed below derive their values from corresponding LineItems, helping to avoid additional lookups when working with shipments.</li>\n</ul>",
                    "<li>The nested <code>Shipment.Items</code> collection has been removed, and shipment items are instead retrieved or saved via new endpoints, much like line items. </li>",
                    "<code>Shipment.Items</code>",
                    "<li>To compensate for the above, there is a new <code>me/shipmentitems</code> endpoint.</li>",
                    "<code>me/shipmentitems</code>",
                    "<li><code>BuyerID</code> has been removed from routes, meaning you can list shipments across multiple buyers. </li>",
                    "<code>BuyerID</code>",
                    "<li>Shipment IDs are now seller-unique.</li>",
                    "<li>All new fields listed below derive their values from corresponding LineItems, helping to avoid additional lookups when working with shipments.</li>",
                    "<p>| New Shipment Field                                        | Notes                          |\n|-----------------------------------------------------------|--------------------------------|\n| Shipment.Account                                          | writeable                      |\n| Shipment.FromAddressID                                    | writeable                      |\n| Shipment.ToAddressID                                      | writeable                      |\n| Shipment.FromAddress                                      | nested object, read-only       |\n| Shipment.ToAddress                                        | nested object, read-only       |\n| ShipmentItem.UnitPrice                                    | read-only                      | \n| ShipmentItem.CostCenter                                   | read-only                      |\n| ShipmentItem.DateNeeded                                   | nested object, read-only       |\n| ShipmentItem.Product                                      | nested object, read-only       |\n| ShipmentItem.Specs                                        | nested collection, read-only   |\n| ShipmentItem.xp                                           | read-only                      |</p>",
                    "<p>| Old Endpoint                                               | New Endpoint                                         |\n|------------------------------------------------------------|------------------------------------------------------|\n| <code>GET v1/:BuyerID/shipments</code>                                | <code>GET v1/shipments</code>                                   |\n| <code>GET v1/:BuyerID/shipments/:id</code>                            | <code>GET v1/shipments/:id</code>                               |\n| N/A                                                        | <code>GET v1/shipments/:id/items</code>                         |\n| N/A                                                        | <code>GET v1/shipments/:id/items/:orderID/:lineItemID</code>    |\n| N/A                                                        | <code>POST v1/shipments/:id/items</code>                        |\n| N/A                                                        | <code>PATCH v1/shipments/:id/items/:orderID/:lineItemID</code>  |</p>",
                    "<code>GET v1/:BuyerID/shipments</code>",
                    "<code>GET v1/shipments</code>",
                    "<code>GET v1/:BuyerID/shipments/:id</code>",
                    "<code>GET v1/shipments/:id</code>",
                    "<code>GET v1/shipments/:id/items</code>",
                    "<code>GET v1/shipments/:id/items/:orderID/:lineItemID</code>",
                    "<code>POST v1/shipments/:id/items</code>",
                    "<code>PATCH v1/shipments/:id/items/:orderID/:lineItemID</code>",
                    "<h3>Simplified Product and Category Assignments</h3>",
                    "<p>|            New Properties           |                   Notes                    |\n|-------------------------------------|--------------------------------------------|\n| Catalog.Active                      |                                            |\n| CatalogAssignment.ViewAllCategories |                                            |\n| CatalogAssignment.ViewAllProducts   |                                            |\n| CategoryAssignment.Visible          | Nullable, inherited from parent or catalog |\n| CategoryAssignment.ViewAllProducts  | Nullable, inherited from parent or catalog |\n| Product.DefaultPriceScheduleId      | Optional, but encouraged.                  |</p>",
                    "<ul>\n<li>\n<p>For a Buyer User to see a Product in the User Perspective (<code>GET v1/me/products</code>), <em>all</em> of the following must be true:</p>\n<ul>\n<li><code>Product.Active</code> is <code>true</code></li>\n<li>Product belongs to a Catalog where <code>Catalog.Active</code> is <code>true</code></li>\n<li>Buyer is assigned to this Catalog</li>\n</ul>\n</li>\n<li>\n<p>In addition, <em>one</em> of the following must be true:</p>\n<ul>\n<li>In Buyer assignment to Catalog, <code>CatalogAssignment.ViewAllProducts</code> is <code>true</code>, <strong>OR</strong></li>\n<li>Product belongs to active Category in the catalog, Category is assigned to Buyer (or any Group the user is in), and <code>CategoryAssignment.ViewAllProducts</code> is <code>true</code>, <strong>OR</strong></li>\n<li>Product is assigned directly to Buyer (or any Group the user is in).</li>\n</ul>\n</li>\n</ul>",
                    "<li>\n<p>For a Buyer User to see a Product in the User Perspective (<code>GET v1/me/products</code>), <em>all</em> of the following must be true:</p>\n<ul>\n<li><code>Product.Active</code> is <code>true</code></li>\n<li>Product belongs to a Catalog where <code>Catalog.Active</code> is <code>true</code></li>\n<li>Buyer is assigned to this Catalog</li>\n</ul>\n</li>",
                    "<p>For a Buyer User to see a Product in the User Perspective (<code>GET v1/me/products</code>), <em>all</em> of the following must be true:</p>",
                    "<code>GET v1/me/products</code>",
                    "<em>all</em>",
                    "<ul>\n<li><code>Product.Active</code> is <code>true</code></li>\n<li>Product belongs to a Catalog where <code>Catalog.Active</code> is <code>true</code></li>\n<li>Buyer is assigned to this Catalog</li>\n</ul>",
                    "<li><code>Product.Active</code> is <code>true</code></li>",
                    "<code>Product.Active</code>",
                    "<code>true</code>",
                    "<li>Product belongs to a Catalog where <code>Catalog.Active</code> is <code>true</code></li>",
                    "<code>Catalog.Active</code>",
                    "<code>true</code>",
                    "<li>Buyer is assigned to this Catalog</li>",
                    "<li>\n<p>In addition, <em>one</em> of the following must be true:</p>\n<ul>\n<li>In Buyer assignment to Catalog, <code>CatalogAssignment.ViewAllProducts</code> is <code>true</code>, <strong>OR</strong></li>\n<li>Product belongs to active Category in the catalog, Category is assigned to Buyer (or any Group the user is in), and <code>CategoryAssignment.ViewAllProducts</code> is <code>true</code>, <strong>OR</strong></li>\n<li>Product is assigned directly to Buyer (or any Group the user is in).</li>\n</ul>\n</li>",
                    "<p>In addition, <em>one</em> of the following must be true:</p>",
                    "<em>one</em>",
                    "<ul>\n<li>In Buyer assignment to Catalog, <code>CatalogAssignment.ViewAllProducts</code> is <code>true</code>, <strong>OR</strong></li>\n<li>Product belongs to active Category in the catalog, Category is assigned to Buyer (or any Group the user is in), and <code>CategoryAssignment.ViewAllProducts</code> is <code>true</code>, <strong>OR</strong></li>\n<li>Product is assigned directly to Buyer (or any Group the user is in).</li>\n</ul>",
                    "<li>In Buyer assignment to Catalog, <code>CatalogAssignment.ViewAllProducts</code> is <code>true</code>, <strong>OR</strong></li>",
                    "<code>CatalogAssignment.ViewAllProducts</code>",
                    "<code>true</code>",
                    "<strong>OR</strong>",
                    "<li>Product belongs to active Category in the catalog, Category is assigned to Buyer (or any Group the user is in), and <code>CategoryAssignment.ViewAllProducts</code> is <code>true</code>, <strong>OR</strong></li>",
                    "<code>CategoryAssignment.ViewAllProducts</code>",
                    "<code>true</code>",
                    "<strong>OR</strong>",
                    "<li>Product is assigned directly to Buyer (or any Group the user is in).</li>",
                    "<p>We recommend checking out the [Catalog Visibility Guide]</p>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.51",
                "Date": "05/07/2017"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>Improved performance for <code>me/categories</code> and <code>me/product</code> lists.</li>\n<li>We've added some more debug information to OpenConnectID errors.</li>\n</ul>",
                    "<li>Improved performance for <code>me/categories</code> and <code>me/product</code> lists.</li>",
                    "<code>me/categories</code>",
                    "<code>me/product</code>",
                    "<li>We've added some more debug information to OpenConnectID errors.</li>",
                    "<h2>Bug Fixes</h2>",
                    "<ul>\n<li>Previously, we required <code>CatalogAdmin</code> and <code>ProductAdmin</code> to list Catalog and Product assignments, respectively. This is now changed to be consistant with other assignment listing role checks so that the user only needs <code>CatalogReader</code> / <code>ProductReader</code>.</li>\n<li>Now, if you patch a line item unit price with either <code>null</code> or an empty string, the price will be recalculated.</li>\n<li>No more 500 error when you try to delete a category with children.</li>\n<li>Generating variant IDs for Spec Option IDs that have blank spaces in their values will no longer result in IDs with spaces. Now all spaces are translated as -.</li>\n<li>Trying to patch <code>ShipWeight</code>/<code>Height</code>/<code>Width</code>/<code>Length</code> with a string no longer throws an error.</li>\n<li>Trying to patch a spec option with an invalid ID returns a 404 now.</li>\n</ul>",
                    "<li>Previously, we required <code>CatalogAdmin</code> and <code>ProductAdmin</code> to list Catalog and Product assignments, respectively. This is now changed to be consistant with other assignment listing role checks so that the user only needs <code>CatalogReader</code> / <code>ProductReader</code>.</li>",
                    "<code>CatalogAdmin</code>",
                    "<code>ProductAdmin</code>",
                    "<code>CatalogReader</code>",
                    "<code>ProductReader</code>",
                    "<li>Now, if you patch a line item unit price with either <code>null</code> or an empty string, the price will be recalculated.</li>",
                    "<code>null</code>",
                    "<li>No more 500 error when you try to delete a category with children.</li>",
                    "<li>Generating variant IDs for Spec Option IDs that have blank spaces in their values will no longer result in IDs with spaces. Now all spaces are translated as -.</li>",
                    "<li>Trying to patch <code>ShipWeight</code>/<code>Height</code>/<code>Width</code>/<code>Length</code> with a string no longer throws an error.</li>",
                    "<code>ShipWeight</code>",
                    "<code>Height</code>",
                    "<code>Width</code>",
                    "<code>Length</code>",
                    "<li>Trying to patch a spec option with an invalid ID returns a 404 now.</li>"
                ],
                "Bug Fixes": [
                    "<ul>\n<li>Previously, we required <code>CatalogAdmin</code> and <code>ProductAdmin</code> to list Catalog and Product assignments, respectively. This is now changed to be consistant with other assignment listing role checks so that the user only needs <code>CatalogReader</code> / <code>ProductReader</code>.</li>\n<li>Now, if you patch a line item unit price with either <code>null</code> or an empty string, the price will be recalculated.</li>\n<li>No more 500 error when you try to delete a category with children.</li>\n<li>Generating variant IDs for Spec Option IDs that have blank spaces in their values will no longer result in IDs with spaces. Now all spaces are translated as -.</li>\n<li>Trying to patch <code>ShipWeight</code>/<code>Height</code>/<code>Width</code>/<code>Length</code> with a string no longer throws an error.</li>\n<li>Trying to patch a spec option with an invalid ID returns a 404 now.</li>\n</ul>",
                    "<li>Previously, we required <code>CatalogAdmin</code> and <code>ProductAdmin</code> to list Catalog and Product assignments, respectively. This is now changed to be consistant with other assignment listing role checks so that the user only needs <code>CatalogReader</code> / <code>ProductReader</code>.</li>",
                    "<code>CatalogAdmin</code>",
                    "<code>ProductAdmin</code>",
                    "<code>CatalogReader</code>",
                    "<code>ProductReader</code>",
                    "<li>Now, if you patch a line item unit price with either <code>null</code> or an empty string, the price will be recalculated.</li>",
                    "<code>null</code>",
                    "<li>No more 500 error when you try to delete a category with children.</li>",
                    "<li>Generating variant IDs for Spec Option IDs that have blank spaces in their values will no longer result in IDs with spaces. Now all spaces are translated as -.</li>",
                    "<li>Trying to patch <code>ShipWeight</code>/<code>Height</code>/<code>Width</code>/<code>Length</code> with a string no longer throws an error.</li>",
                    "<code>ShipWeight</code>",
                    "<code>Height</code>",
                    "<code>Width</code>",
                    "<code>Length</code>",
                    "<li>Trying to patch a spec option with an invalid ID returns a 404 now.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.52",
                "Date": "05/10/2017"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>Improved performance for seller-side <code>/orders</code> lists</li>\n</ul>",
                    "<li>Improved performance for seller-side <code>/orders</code> lists</li>",
                    "<code>/orders</code>",
                    "<h2>Bug Fixes</h2>",
                    "<ul>\n<li>Now, a buyer user with <code>CatalogAdmin</code> should be able to:<ul>\n<li>Patch any catalog assigned to their buyer</li>\n<li>Update any catalog assigned to their buyer</li>\n<li>SaveProductAssignments for any catalog assigned to their buyer</li>\n<li>ListProductAssignments for any catalog assigned to their buyer</li>\n<li>DeleteProductAssignments for any catalog assigned to their buyer</li>\n</ul>\n</li>\n<li>A buyer user with <code>CatalogAdmin</code> should not have the ability to:<ul>\n<li>Assign catalogs to other buyers</li>\n<li>List catalog assignments of other buyers</li>\n<li>Delete catalog assignments (even those for their own buyer)</li>\n<li>Delete catalogs (even those assigned to their buyer)</li>\n</ul>\n</li>\n<li>Removed invalid parameters previously documented on list endpoints</li>\n</ul>",
                    "<li>Now, a buyer user with <code>CatalogAdmin</code> should be able to:<ul>\n<li>Patch any catalog assigned to their buyer</li>\n<li>Update any catalog assigned to their buyer</li>\n<li>SaveProductAssignments for any catalog assigned to their buyer</li>\n<li>ListProductAssignments for any catalog assigned to their buyer</li>\n<li>DeleteProductAssignments for any catalog assigned to their buyer</li>\n</ul>\n</li>",
                    "<code>CatalogAdmin</code>",
                    "<ul>\n<li>Patch any catalog assigned to their buyer</li>\n<li>Update any catalog assigned to their buyer</li>\n<li>SaveProductAssignments for any catalog assigned to their buyer</li>\n<li>ListProductAssignments for any catalog assigned to their buyer</li>\n<li>DeleteProductAssignments for any catalog assigned to their buyer</li>\n</ul>",
                    "<li>Patch any catalog assigned to their buyer</li>",
                    "<li>Update any catalog assigned to their buyer</li>",
                    "<li>SaveProductAssignments for any catalog assigned to their buyer</li>",
                    "<li>ListProductAssignments for any catalog assigned to their buyer</li>",
                    "<li>DeleteProductAssignments for any catalog assigned to their buyer</li>",
                    "<li>A buyer user with <code>CatalogAdmin</code> should not have the ability to:<ul>\n<li>Assign catalogs to other buyers</li>\n<li>List catalog assignments of other buyers</li>\n<li>Delete catalog assignments (even those for their own buyer)</li>\n<li>Delete catalogs (even those assigned to their buyer)</li>\n</ul>\n</li>",
                    "<code>CatalogAdmin</code>",
                    "<ul>\n<li>Assign catalogs to other buyers</li>\n<li>List catalog assignments of other buyers</li>\n<li>Delete catalog assignments (even those for their own buyer)</li>\n<li>Delete catalogs (even those assigned to their buyer)</li>\n</ul>",
                    "<li>Assign catalogs to other buyers</li>",
                    "<li>List catalog assignments of other buyers</li>",
                    "<li>Delete catalog assignments (even those for their own buyer)</li>",
                    "<li>Delete catalogs (even those assigned to their buyer)</li>",
                    "<li>Removed invalid parameters previously documented on list endpoints</li>"
                ],
                "Bug Fixes": [
                    "<ul>\n<li>Now, a buyer user with <code>CatalogAdmin</code> should be able to:<ul>\n<li>Patch any catalog assigned to their buyer</li>\n<li>Update any catalog assigned to their buyer</li>\n<li>SaveProductAssignments for any catalog assigned to their buyer</li>\n<li>ListProductAssignments for any catalog assigned to their buyer</li>\n<li>DeleteProductAssignments for any catalog assigned to their buyer</li>\n</ul>\n</li>\n<li>A buyer user with <code>CatalogAdmin</code> should not have the ability to:<ul>\n<li>Assign catalogs to other buyers</li>\n<li>List catalog assignments of other buyers</li>\n<li>Delete catalog assignments (even those for their own buyer)</li>\n<li>Delete catalogs (even those assigned to their buyer)</li>\n</ul>\n</li>\n<li>Removed invalid parameters previously documented on list endpoints</li>\n</ul>",
                    "<li>Now, a buyer user with <code>CatalogAdmin</code> should be able to:<ul>\n<li>Patch any catalog assigned to their buyer</li>\n<li>Update any catalog assigned to their buyer</li>\n<li>SaveProductAssignments for any catalog assigned to their buyer</li>\n<li>ListProductAssignments for any catalog assigned to their buyer</li>\n<li>DeleteProductAssignments for any catalog assigned to their buyer</li>\n</ul>\n</li>",
                    "<code>CatalogAdmin</code>",
                    "<ul>\n<li>Patch any catalog assigned to their buyer</li>\n<li>Update any catalog assigned to their buyer</li>\n<li>SaveProductAssignments for any catalog assigned to their buyer</li>\n<li>ListProductAssignments for any catalog assigned to their buyer</li>\n<li>DeleteProductAssignments for any catalog assigned to their buyer</li>\n</ul>",
                    "<li>Patch any catalog assigned to their buyer</li>",
                    "<li>Update any catalog assigned to their buyer</li>",
                    "<li>SaveProductAssignments for any catalog assigned to their buyer</li>",
                    "<li>ListProductAssignments for any catalog assigned to their buyer</li>",
                    "<li>DeleteProductAssignments for any catalog assigned to their buyer</li>",
                    "<li>A buyer user with <code>CatalogAdmin</code> should not have the ability to:<ul>\n<li>Assign catalogs to other buyers</li>\n<li>List catalog assignments of other buyers</li>\n<li>Delete catalog assignments (even those for their own buyer)</li>\n<li>Delete catalogs (even those assigned to their buyer)</li>\n</ul>\n</li>",
                    "<code>CatalogAdmin</code>",
                    "<ul>\n<li>Assign catalogs to other buyers</li>\n<li>List catalog assignments of other buyers</li>\n<li>Delete catalog assignments (even those for their own buyer)</li>\n<li>Delete catalogs (even those assigned to their buyer)</li>\n</ul>",
                    "<li>Assign catalogs to other buyers</li>",
                    "<li>List catalog assignments of other buyers</li>",
                    "<li>Delete catalog assignments (even those for their own buyer)</li>",
                    "<li>Delete catalogs (even those assigned to their buyer)</li>",
                    "<li>Removed invalid parameters previously documented on list endpoints</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.53",
                "Date": "05/15/2017"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>Buyer Users with the <code>ShipmentAdmin</code> role can now properly create shipments.</li>\n<li>We now properly throw a 409 error if you try to delete an admin user who is being used as the <code>DefaultUserContextID</code> for an org.</li>\n<li>Listing me/Shipments performance should be noticeably improved on large lists.</li>\n<li>Initial emails for Approvals message senders were not being sent.</li>\n</ul>",
                    "<li>Buyer Users with the <code>ShipmentAdmin</code> role can now properly create shipments.</li>",
                    "<code>ShipmentAdmin</code>",
                    "<li>We now properly throw a 409 error if you try to delete an admin user who is being used as the <code>DefaultUserContextID</code> for an org.</li>",
                    "<code>DefaultUserContextID</code>",
                    "<li>Listing me/Shipments performance should be noticeably improved on large lists.</li>",
                    "<li>Initial emails for Approvals message senders were not being sent.</li>",
                    "<h2>New Features</h2>",
                    "<ul>\n<li>Developers who use the OIDC flow for authentication will now be able to dynamically route their users to specific parts of their app after authentication. To do so, add <code>appstartpath=&lt;extrapath&gt;</code> to the query on ocrplogin.<ul>\n<li>Example: <code>https://nodomain.com/myapp{2}?token={0}&amp;idt={1}</code></li>\n<li>The {2} can go anywhere in the appstart url.</li>\n</ul>\n</li>\n</ul>",
                    "<li>Developers who use the OIDC flow for authentication will now be able to dynamically route their users to specific parts of their app after authentication. To do so, add <code>appstartpath=&lt;extrapath&gt;</code> to the query on ocrplogin.<ul>\n<li>Example: <code>https://nodomain.com/myapp{2}?token={0}&amp;idt={1}</code></li>\n<li>The {2} can go anywhere in the appstart url.</li>\n</ul>\n</li>",
                    "<code>appstartpath=&lt;extrapath&gt;</code>",
                    "<ul>\n<li>Example: <code>https://nodomain.com/myapp{2}?token={0}&amp;idt={1}</code></li>\n<li>The {2} can go anywhere in the appstart url.</li>\n</ul>",
                    "<li>Example: <code>https://nodomain.com/myapp{2}?token={0}&amp;idt={1}</code></li>",
                    "<code>https://nodomain.com/myapp{2}?token={0}&amp;idt={1}</code>",
                    "<li>The {2} can go anywhere in the appstart url.</li>"
                ],
                "New Features": [
                    "<ul>\n<li>Developers who use the OIDC flow for authentication will now be able to dynamically route their users to specific parts of their app after authentication. To do so, add <code>appstartpath=&lt;extrapath&gt;</code> to the query on ocrplogin.<ul>\n<li>Example: <code>https://nodomain.com/myapp{2}?token={0}&amp;idt={1}</code></li>\n<li>The {2} can go anywhere in the appstart url.</li>\n</ul>\n</li>\n</ul>",
                    "<li>Developers who use the OIDC flow for authentication will now be able to dynamically route their users to specific parts of their app after authentication. To do so, add <code>appstartpath=&lt;extrapath&gt;</code> to the query on ocrplogin.<ul>\n<li>Example: <code>https://nodomain.com/myapp{2}?token={0}&amp;idt={1}</code></li>\n<li>The {2} can go anywhere in the appstart url.</li>\n</ul>\n</li>",
                    "<code>appstartpath=&lt;extrapath&gt;</code>",
                    "<ul>\n<li>Example: <code>https://nodomain.com/myapp{2}?token={0}&amp;idt={1}</code></li>\n<li>The {2} can go anywhere in the appstart url.</li>\n</ul>",
                    "<li>Example: <code>https://nodomain.com/myapp{2}?token={0}&amp;idt={1}</code></li>",
                    "<code>https://nodomain.com/myapp{2}?token={0}&amp;idt={1}</code>",
                    "<li>The {2} can go anywhere in the appstart url.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.54",
                "Date": "05/26/2017"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>Now when you <code>PATCH</code> the LineItem.UnitPrice, the LineItem Total will update as well!</li>\n<li>We've improved our error handling for invalid rules engine expressions, so you find out if it's an invalid rule when you try to create it, not when you try to submit an order.</li>\n<li>Fixed a race condition where adding the same product to multiple categories sometimes resulted in a 409 error.</li>\n</ul>",
                    "<li>Now when you <code>PATCH</code> the LineItem.UnitPrice, the LineItem Total will update as well!</li>",
                    "<code>PATCH</code>",
                    "<li>We've improved our error handling for invalid rules engine expressions, so you find out if it's an invalid rule when you try to create it, not when you try to submit an order.</li>",
                    "<li>Fixed a race condition where adding the same product to multiple categories sometimes resulted in a 409 error.</li>",
                    "<h2>New Feature</h2>",
                    "<ul>\n<li>We improved performance for admin category lists substantially.</li>\n<li>We now return a <code>Buyer</code> subobject on the me/user model</li>\n</ul>",
                    "<li>We improved performance for admin category lists substantially.</li>",
                    "<li>We now return a <code>Buyer</code> subobject on the me/user model</li>",
                    "<code>Buyer</code>"
                ],
                "New Feature": [
                    "<ul>\n<li>We improved performance for admin category lists substantially.</li>\n<li>We now return a <code>Buyer</code> subobject on the me/user model</li>\n</ul>",
                    "<li>We improved performance for admin category lists substantially.</li>",
                    "<li>We now return a <code>Buyer</code> subobject on the me/user model</li>",
                    "<code>Buyer</code>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.55",
                "Date": "06/13/2017"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>We added two new Mandrill template variables: <code>ShipmentItems</code> and <code>DateShipped</code></li>\n</ul>",
                    "<li>We added two new Mandrill template variables: <code>ShipmentItems</code> and <code>DateShipped</code></li>",
                    "<code>ShipmentItems</code>",
                    "<code>DateShipped</code>",
                    "<h2>Bug Fixes</h2>",
                    "<ul>\n<li>We fixed an issue where some list endpoints would fail intermittently with a 409 error. This included Me Categories, and Me Products, among others.</li>\n<li>We fixed an issue where the Rules Engine was throwing a 500 if you tried to create a rule with <code>order.xp</code> in either of the expressions.</li>\n</ul>",
                    "<li>We fixed an issue where some list endpoints would fail intermittently with a 409 error. This included Me Categories, and Me Products, among others.</li>",
                    "<li>We fixed an issue where the Rules Engine was throwing a 500 if you tried to create a rule with <code>order.xp</code> in either of the expressions.</li>",
                    "<code>order.xp</code>"
                ],
                "Bug Fixes": [
                    "<ul>\n<li>We fixed an issue where some list endpoints would fail intermittently with a 409 error. This included Me Categories, and Me Products, among others.</li>\n<li>We fixed an issue where the Rules Engine was throwing a 500 if you tried to create a rule with <code>order.xp</code> in either of the expressions.</li>\n</ul>",
                    "<li>We fixed an issue where some list endpoints would fail intermittently with a 409 error. This included Me Categories, and Me Products, among others.</li>",
                    "<li>We fixed an issue where the Rules Engine was throwing a 500 if you tried to create a rule with <code>order.xp</code> in either of the expressions.</li>",
                    "<code>order.xp</code>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.56",
                "Date": "06/16/2017"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>Fixed an issue where a second approval or decline of an order would return a 409 error</li>\n</ul>",
                    "<li>Fixed an issue where a second approval or decline of an order would return a 409 error</li>",
                    "<h2>New Features</h2>",
                    "<ul>\n<li>If a default <code>ShipFrom</code> address exists on a product, the <code>shipFromAddress</code> on a line item containing that product is now inherited on line item create, not order submit. This allows shipping to be more easily calculated.</li>\n<li>You can now filter lists with comparative operands <code>&gt;=</code> and <code>=&lt;</code>, as well as <code>&gt;</code>, <code>&lt;</code>, <code>=</code>, and <code>!</code></li>\n<li>All approvals are now listed in an order's approval history, not just the final one.</li>\n</ul>",
                    "<li>If a default <code>ShipFrom</code> address exists on a product, the <code>shipFromAddress</code> on a line item containing that product is now inherited on line item create, not order submit. This allows shipping to be more easily calculated.</li>",
                    "<code>ShipFrom</code>",
                    "<code>shipFromAddress</code>",
                    "<li>You can now filter lists with comparative operands <code>&gt;=</code> and <code>=&lt;</code>, as well as <code>&gt;</code>, <code>&lt;</code>, <code>=</code>, and <code>!</code></li>",
                    "<code>&gt;=</code>",
                    "<code>=&lt;</code>",
                    "<code>&gt;</code>",
                    "<code>&lt;</code>",
                    "<code>=</code>",
                    "<code>!</code>",
                    "<li>All approvals are now listed in an order's approval history, not just the final one.</li>"
                ],
                "New Features": [
                    "<ul>\n<li>If a default <code>ShipFrom</code> address exists on a product, the <code>shipFromAddress</code> on a line item containing that product is now inherited on line item create, not order submit. This allows shipping to be more easily calculated.</li>\n<li>You can now filter lists with comparative operands <code>&gt;=</code> and <code>=&lt;</code>, as well as <code>&gt;</code>, <code>&lt;</code>, <code>=</code>, and <code>!</code></li>\n<li>All approvals are now listed in an order's approval history, not just the final one.</li>\n</ul>",
                    "<li>If a default <code>ShipFrom</code> address exists on a product, the <code>shipFromAddress</code> on a line item containing that product is now inherited on line item create, not order submit. This allows shipping to be more easily calculated.</li>",
                    "<code>ShipFrom</code>",
                    "<code>shipFromAddress</code>",
                    "<li>You can now filter lists with comparative operands <code>&gt;=</code> and <code>=&lt;</code>, as well as <code>&gt;</code>, <code>&lt;</code>, <code>=</code>, and <code>!</code></li>",
                    "<code>&gt;=</code>",
                    "<code>=&lt;</code>",
                    "<code>&gt;</code>",
                    "<code>&lt;</code>",
                    "<code>=</code>",
                    "<code>!</code>",
                    "<li>All approvals are now listed in an order's approval history, not just the final one.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.57",
                "Date": "06/23/2017"
            },
            "Features": {
                "Bug Fixes": [
                    "<ul>\n<li>Previously, if you created or patched a Shipment's <code>ToAddressId</code>, the response body would show <code>NULL</code>. This is now fixed.</li>\n<li>If you had a Shipment's <code>ToAddressId</code> set to <code>NULL</code>, and attempted to trigger a shipment notification through Message Senders, it would not get sent.</li>\n</ul>",
                    "<li>Previously, if you created or patched a Shipment's <code>ToAddressId</code>, the response body would show <code>NULL</code>. This is now fixed.</li>",
                    "<code>ToAddressId</code>",
                    "<code>NULL</code>",
                    "<li>If you had a Shipment's <code>ToAddressId</code> set to <code>NULL</code>, and attempted to trigger a shipment notification through Message Senders, it would not get sent.</li>",
                    "<code>ToAddressId</code>",
                    "<code>NULL</code>",
                    "<h2>New Features</h2>",
                    "<ul>\n<li>When you add a new xp value to be indexed, previous xp with that value will now be retroactively indexed.</li>\n<li>Performance improvement around logging.</li>\n</ul>",
                    "<li>When you add a new xp value to be indexed, previous xp with that value will now be retroactively indexed.</li>",
                    "<li>Performance improvement around logging.</li>"
                ],
                "New Features": [
                    "<ul>\n<li>When you add a new xp value to be indexed, previous xp with that value will now be retroactively indexed.</li>\n<li>Performance improvement around logging.</li>\n</ul>",
                    "<li>When you add a new xp value to be indexed, previous xp with that value will now be retroactively indexed.</li>",
                    "<li>Performance improvement around logging.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.58",
                "Date": "06/29/2017"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>Various performance improvements</li>\n</ul>",
                    "<li>Various performance improvements</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.59",
                "Date": "07/13/2017"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>We've added the Billing Information Name to Customer Profile on our Authorize.Net integration.</li>\n</ul>",
                    "<li>We've added the Billing Information Name to Customer Profile on our Authorize.Net integration.</li>",
                    "<h2>Bugs Fixed</h2>",
                    "<ul>\n<li>We have added better error handling for API calls that include .NET reserved keywords in the route (typically in a buyer ID, etc.) </li>\n<li>You should no longer ever receive a 409 duplicate error on a <code>GET</code> call. Instead this will properly return a 500 error, as this is a bug.</li>\n</ul>",
                    "<li>We have added better error handling for API calls that include .NET reserved keywords in the route (typically in a buyer ID, etc.) </li>",
                    "<li>You should no longer ever receive a 409 duplicate error on a <code>GET</code> call. Instead this will properly return a 500 error, as this is a bug.</li>",
                    "<code>GET</code>"
                ],
                "Bugs Fixed": [
                    "<ul>\n<li>We have added better error handling for API calls that include .NET reserved keywords in the route (typically in a buyer ID, etc.) </li>\n<li>You should no longer ever receive a 409 duplicate error on a <code>GET</code> call. Instead this will properly return a 500 error, as this is a bug.</li>\n</ul>",
                    "<li>We have added better error handling for API calls that include .NET reserved keywords in the route (typically in a buyer ID, etc.) </li>",
                    "<li>You should no longer ever receive a 409 duplicate error on a <code>GET</code> call. Instead this will properly return a 500 error, as this is a bug.</li>",
                    "<code>GET</code>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.60",
                "Date": "07/18/2017"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>We've added a description field to Message Senders. </li>\n<li>We moved the platform Message Sender code to a public repo, so that developers can use it to create custom Message Senders. <a href=\"https://github.com/ordercloud-api/MessageSender\">Message Sender on GitHub</a><ul>\n<li>Please note, <strong>we have not yet enabled custom message senders in DevCenter</strong>. You can start to develop one but can't configure one just yet to be used. This will be available in DevCenter in the near future.</li>\n</ul>\n</li>\n<li>We've improved logging around Message Senders.</li>\n</ul>",
                    "<li>We've added a description field to Message Senders. </li>",
                    "<li>We moved the platform Message Sender code to a public repo, so that developers can use it to create custom Message Senders. <a href=\"https://github.com/ordercloud-api/MessageSender\">Message Sender on GitHub</a><ul>\n<li>Please note, <strong>we have not yet enabled custom message senders in DevCenter</strong>. You can start to develop one but can't configure one just yet to be used. This will be available in DevCenter in the near future.</li>\n</ul>\n</li>",
                    "<a href=\"https://github.com/ordercloud-api/MessageSender\">Message Sender on GitHub</a>",
                    "<ul>\n<li>Please note, <strong>we have not yet enabled custom message senders in DevCenter</strong>. You can start to develop one but can't configure one just yet to be used. This will be available in DevCenter in the near future.</li>\n</ul>",
                    "<li>Please note, <strong>we have not yet enabled custom message senders in DevCenter</strong>. You can start to develop one but can't configure one just yet to be used. This will be available in DevCenter in the near future.</li>",
                    "<strong>we have not yet enabled custom message senders in DevCenter</strong>",
                    "<li>We've improved logging around Message Senders.</li>",
                    "<h2>Bugs Fixed</h2>",
                    "<ul>\n<li>We fixed an issue that was blocking New User Invite emails.</li>\n</ul>",
                    "<li>We fixed an issue that was blocking New User Invite emails.</li>"
                ],
                "Bugs Fixed": [
                    "<ul>\n<li>We fixed an issue that was blocking New User Invite emails.</li>\n</ul>",
                    "<li>We fixed an issue that was blocking New User Invite emails.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.61",
                "Date": "09/07/2017"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>Several tweaks to improve API logging and Documentation generation.</li>\n</ul>",
                    "<li>Several tweaks to improve API logging and Documentation generation.</li>",
                    "<h2>Bug Fixes</h2>",
                    "<ul>\n<li>Previously, if you transfered an anon user's order to a profiled user, the prices would not update to reflect the profiled user's price assignments. This is now fixed.</li>\n</ul>",
                    "<li>Previously, if you transfered an anon user's order to a profiled user, the prices would not update to reflect the profiled user's price assignments. This is now fixed.</li>"
                ],
                "Bug Fixes": [
                    "<ul>\n<li>Previously, if you transfered an anon user's order to a profiled user, the prices would not update to reflect the profiled user's price assignments. This is now fixed.</li>\n</ul>",
                    "<li>Previously, if you transfered an anon user's order to a profiled user, the prices would not update to reflect the profiled user's price assignments. This is now fixed.</li>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.62",
                "Date": "09/28/2017"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>Upgraded to latest <a href=\"\">Flurl</a></li>\n</ul>",
                    "<li>Upgraded to latest <a href=\"\">Flurl</a></li>",
                    "<a href=\"\">Flurl</a>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.63",
                "Date": "10/18/2017"
            },
            "Features": {
                "Bugs": [
                    "<ul>\n<li>Payments: Payment with Type <code>SpendingAccount</code> must have <code>SpendingAccountID</code></li>\n<li>Unable to use <code>PUT</code> to create new <code>UserGroup</code></li>\n<li>Orders: <code>order.Total</code> not updated when <code>ShippingCost</code> is updated via <code>PATCH</code></li>\n</ul>",
                    "<li>Payments: Payment with Type <code>SpendingAccount</code> must have <code>SpendingAccountID</code></li>",
                    "<code>SpendingAccount</code>",
                    "<code>SpendingAccountID</code>",
                    "<li>Unable to use <code>PUT</code> to create new <code>UserGroup</code></li>",
                    "<code>PUT</code>",
                    "<code>UserGroup</code>",
                    "<li>Orders: <code>order.Total</code> not updated when <code>ShippingCost</code> is updated via <code>PATCH</code></li>",
                    "<code>order.Total</code>",
                    "<code>ShippingCost</code>",
                    "<code>PATCH</code>",
                    "<h2>New Features</h2>",
                    "<ul>\n<li>Added transactional email support for guest checkout (<a href=\"http://qa-documentation.ordercloud.io/api-reference#Orders_PatchFromUser\">documentation</a>)</li>\n</ul>",
                    "<li>Added transactional email support for guest checkout (<a href=\"http://qa-documentation.ordercloud.io/api-reference#Orders_PatchFromUser\">documentation</a>)</li>",
                    "<a href=\"http://qa-documentation.ordercloud.io/api-reference#Orders_PatchFromUser\">documentation</a>",
                    "<p><code>`PATCH` `v1/orders/{direction}/{orderID}/fromuser`\n{\"FirstName\": \"\", \"LastName\": \"\", \"Email\": \"\"}</code>\n- Products: Allow negation of all filters on admin Product List (<code>catalogID</code>, <code>categoryID</code>, <code>supplierID</code>)</p>",
                    "<code>`PATCH` `v1/orders/{direction}/{orderID}/fromuser`\n{\"FirstName\": \"\", \"LastName\": \"\", \"Email\": \"\"}</code>",
                    "<code>catalogID</code>",
                    "<code>categoryID</code>",
                    "<code>supplierID</code>"
                ],
                "New Features": [
                    "<ul>\n<li>Added transactional email support for guest checkout (<a href=\"http://qa-documentation.ordercloud.io/api-reference#Orders_PatchFromUser\">documentation</a>)</li>\n</ul>",
                    "<li>Added transactional email support for guest checkout (<a href=\"http://qa-documentation.ordercloud.io/api-reference#Orders_PatchFromUser\">documentation</a>)</li>",
                    "<a href=\"http://qa-documentation.ordercloud.io/api-reference#Orders_PatchFromUser\">documentation</a>",
                    "<p><code>`PATCH` `v1/orders/{direction}/{orderID}/fromuser`\n{\"FirstName\": \"\", \"LastName\": \"\", \"Email\": \"\"}</code>\n- Products: Allow negation of all filters on admin Product List (<code>catalogID</code>, <code>categoryID</code>, <code>supplierID</code>)</p>",
                    "<code>`PATCH` `v1/orders/{direction}/{orderID}/fromuser`\n{\"FirstName\": \"\", \"LastName\": \"\", \"Email\": \"\"}</code>",
                    "<code>catalogID</code>",
                    "<code>categoryID</code>",
                    "<code>supplierID</code>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.64",
                "Date": "10/30/2017"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>We now allow <code>lineitems</code> of <em>unsubmitted</em> <code>Orders</code> to be added to a <code>Shipment</code>. This does not apply to the <a href=\"http://qa-documentation.ordercloud.io/api-reference#Orders_Ship\"><code>ship all</code> endpoint</a>.</li>\n<li>There is a new endpoint that allows a <code>buyer user</code> to be transfered from one buyer to another, within the same organization. Please check out the <a href=\"http://qa-documentation.ordercloud.io/api-reference#Users_Move\">documentation</a> for further details.</li>\n<li>please note, this should only be attempted by an <code>admin user</code> in a seller application. If a buyer user, even one with <code>Full Access</code>, tries this, it will not work as expected. </li>\n</ul>",
                    "<li>We now allow <code>lineitems</code> of <em>unsubmitted</em> <code>Orders</code> to be added to a <code>Shipment</code>. This does not apply to the <a href=\"http://qa-documentation.ordercloud.io/api-reference#Orders_Ship\"><code>ship all</code> endpoint</a>.</li>",
                    "<code>lineitems</code>",
                    "<em>unsubmitted</em>",
                    "<code>Orders</code>",
                    "<code>Shipment</code>",
                    "<a href=\"http://qa-documentation.ordercloud.io/api-reference#Orders_Ship\"><code>ship all</code> endpoint</a>",
                    "<code>ship all</code>",
                    "<li>There is a new endpoint that allows a <code>buyer user</code> to be transfered from one buyer to another, within the same organization. Please check out the <a href=\"http://qa-documentation.ordercloud.io/api-reference#Users_Move\">documentation</a> for further details.</li>",
                    "<code>buyer user</code>",
                    "<a href=\"http://qa-documentation.ordercloud.io/api-reference#Users_Move\">documentation</a>",
                    "<li>please note, this should only be attempted by an <code>admin user</code> in a seller application. If a buyer user, even one with <code>Full Access</code>, tries this, it will not work as expected. </li>",
                    "<code>admin user</code>",
                    "<code>Full Access</code>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.65",
                "Date": "11/21/2017"
            },
            "Features": {
                "New Features": [
                    "<ul>\n<li>The <a href=\"https://documentation.ordercloud.io/api-reference#MeCategories\">Me endpoint for categories</a> now has an optional <code>ProductID</code> filter. This allows a user to find all the categories assigned to them that have that product in them, removing the need to give a user the <code>CategoryReader</code> role to accomplish this.   </li>\n</ul>",
                    "<li>The <a href=\"https://documentation.ordercloud.io/api-reference#MeCategories\">Me endpoint for categories</a> now has an optional <code>ProductID</code> filter. This allows a user to find all the categories assigned to them that have that product in them, removing the need to give a user the <code>CategoryReader</code> role to accomplish this.   </li>",
                    "<a href=\"https://documentation.ordercloud.io/api-reference#MeCategories\">Me endpoint for categories</a>",
                    "<code>ProductID</code>",
                    "<code>CategoryReader</code>",
                    "<p><em>Request:</em></p>",
                    "<em>Request:</em>",
                    "<pre><code>GET https://api.ordercloud.io/v1/me/categories?ProductID=SuperAwesomeProduct\n</code></pre>",
                    "<code>GET https://api.ordercloud.io/v1/me/categories?ProductID=SuperAwesomeProduct\n</code>",
                    "<p><em>Response:</em></p>",
                    "<em>Response:</em>",
                    "<pre><code>Status Code = 200\n\n{\n  \"Meta\": {\n    \"Page\": 1,\n    \"PageSize\": 20,\n    \"TotalCount\": 25,\n    \"TotalPages\": 2,\n    \"ItemRange\": [\n      1,\n      20\n    ]\n  },\n  \"Items\": [\n    {\n      \"ID\": \"SuperAwesomeCategory\",\n      \"Name\": \"I Contain the SuperAwesomeProduct\",\n      \"Description\": \"\",\n      \"ListOrder\": 1,\n      \"Active\": true,\n      \"ParentID\": \"\",\n      \"ChildCount\": 0,\n      \"xp\": {}\n    }\n  ]\n}\n</code></pre>",
                    "<code>Status Code = 200\n\n{\n  \"Meta\": {\n    \"Page\": 1,\n    \"PageSize\": 20,\n    \"TotalCount\": 25,\n    \"TotalPages\": 2,\n    \"ItemRange\": [\n      1,\n      20\n    ]\n  },\n  \"Items\": [\n    {\n      \"ID\": \"SuperAwesomeCategory\",\n      \"Name\": \"I Contain the SuperAwesomeProduct\",\n      \"Description\": \"\",\n      \"ListOrder\": 1,\n      \"Active\": true,\n      \"ParentID\": \"\",\n      \"ChildCount\": 0,\n      \"xp\": {}\n    }\n  ]\n}\n</code>",
                    "<ul>\n<li>\n<p>We also added a Me route for <code>GET</code>ing a single category! <a href=\"http://documentation.ordercloud.io/api-reference#MeCategories_GetCategory\">DOCS</a></p>\n<p><code>GET</code> <code>https://api.ordercloud.io/v1/me/categories/{categoryID}</code></p>\n</li>\n</ul>",
                    "<li>\n<p>We also added a Me route for <code>GET</code>ing a single category! <a href=\"http://documentation.ordercloud.io/api-reference#MeCategories_GetCategory\">DOCS</a></p>\n<p><code>GET</code> <code>https://api.ordercloud.io/v1/me/categories/{categoryID}</code></p>\n</li>",
                    "<p>We also added a Me route for <code>GET</code>ing a single category! <a href=\"http://documentation.ordercloud.io/api-reference#MeCategories_GetCategory\">DOCS</a></p>",
                    "<code>GET</code>",
                    "<a href=\"http://documentation.ordercloud.io/api-reference#MeCategories_GetCategory\">DOCS</a>",
                    "<p><code>GET</code> <code>https://api.ordercloud.io/v1/me/categories/{categoryID}</code></p>",
                    "<code>GET</code>",
                    "<code>https://api.ordercloud.io/v1/me/categories/{categoryID}</code>",
                    "<h2>Bug Fixes</h2>",
                    "<ul>\n<li>Previously, if you attempted to submit an order that had a lineitem with a product that had specs <em>and</em> options, it would fail. Fixed now!<ul>\n<li><a href=\"https://documentation.ordercloud.io/use-case-guides/product-catalog-management/cpq-configure-price-quote\">need a refresher on product specs and spec options?</a></li>\n<li><a href=\"https://documentation.ordercloud.io/api-reference#Specs\">api reference for product specs</a></li>\n</ul>\n</li>\n<li>On <code>OrderSubmitted</code> <a href=\"https://github.com/ordercloud-api/mailchimp-email-templates\">Message Sender Mandrill Templates</a>, the order total merge variable was not accurately reflecting order total, leaving out promotion discount. This is now fixed. (The API model was never affected, only the Message Sender merge variable.)</li>\n<li>We fixed a bad index that was causing massive performance problems for <code>DELETE</code>ing a Security Profile <em>assignment</em>. You should be able to go forth and delete to your hearts content now with no fear of the angry spinner!</li>\n</ul>",
                    "<li>Previously, if you attempted to submit an order that had a lineitem with a product that had specs <em>and</em> options, it would fail. Fixed now!<ul>\n<li><a href=\"https://documentation.ordercloud.io/use-case-guides/product-catalog-management/cpq-configure-price-quote\">need a refresher on product specs and spec options?</a></li>\n<li><a href=\"https://documentation.ordercloud.io/api-reference#Specs\">api reference for product specs</a></li>\n</ul>\n</li>",
                    "<em>and</em>",
                    "<ul>\n<li><a href=\"https://documentation.ordercloud.io/use-case-guides/product-catalog-management/cpq-configure-price-quote\">need a refresher on product specs and spec options?</a></li>\n<li><a href=\"https://documentation.ordercloud.io/api-reference#Specs\">api reference for product specs</a></li>\n</ul>",
                    "<li><a href=\"https://documentation.ordercloud.io/use-case-guides/product-catalog-management/cpq-configure-price-quote\">need a refresher on product specs and spec options?</a></li>",
                    "<a href=\"https://documentation.ordercloud.io/use-case-guides/product-catalog-management/cpq-configure-price-quote\">need a refresher on product specs and spec options?</a>",
                    "<li><a href=\"https://documentation.ordercloud.io/api-reference#Specs\">api reference for product specs</a></li>",
                    "<a href=\"https://documentation.ordercloud.io/api-reference#Specs\">api reference for product specs</a>",
                    "<li>On <code>OrderSubmitted</code> <a href=\"https://github.com/ordercloud-api/mailchimp-email-templates\">Message Sender Mandrill Templates</a>, the order total merge variable was not accurately reflecting order total, leaving out promotion discount. This is now fixed. (The API model was never affected, only the Message Sender merge variable.)</li>",
                    "<code>OrderSubmitted</code>",
                    "<a href=\"https://github.com/ordercloud-api/mailchimp-email-templates\">Message Sender Mandrill Templates</a>",
                    "<li>We fixed a bad index that was causing massive performance problems for <code>DELETE</code>ing a Security Profile <em>assignment</em>. You should be able to go forth and delete to your hearts content now with no fear of the angry spinner!</li>",
                    "<code>DELETE</code>",
                    "<em>assignment</em>"
                ],
                "Bug Fixes": [
                    "<ul>\n<li>Previously, if you attempted to submit an order that had a lineitem with a product that had specs <em>and</em> options, it would fail. Fixed now!<ul>\n<li><a href=\"https://documentation.ordercloud.io/use-case-guides/product-catalog-management/cpq-configure-price-quote\">need a refresher on product specs and spec options?</a></li>\n<li><a href=\"https://documentation.ordercloud.io/api-reference#Specs\">api reference for product specs</a></li>\n</ul>\n</li>\n<li>On <code>OrderSubmitted</code> <a href=\"https://github.com/ordercloud-api/mailchimp-email-templates\">Message Sender Mandrill Templates</a>, the order total merge variable was not accurately reflecting order total, leaving out promotion discount. This is now fixed. (The API model was never affected, only the Message Sender merge variable.)</li>\n<li>We fixed a bad index that was causing massive performance problems for <code>DELETE</code>ing a Security Profile <em>assignment</em>. You should be able to go forth and delete to your hearts content now with no fear of the angry spinner!</li>\n</ul>",
                    "<li>Previously, if you attempted to submit an order that had a lineitem with a product that had specs <em>and</em> options, it would fail. Fixed now!<ul>\n<li><a href=\"https://documentation.ordercloud.io/use-case-guides/product-catalog-management/cpq-configure-price-quote\">need a refresher on product specs and spec options?</a></li>\n<li><a href=\"https://documentation.ordercloud.io/api-reference#Specs\">api reference for product specs</a></li>\n</ul>\n</li>",
                    "<em>and</em>",
                    "<ul>\n<li><a href=\"https://documentation.ordercloud.io/use-case-guides/product-catalog-management/cpq-configure-price-quote\">need a refresher on product specs and spec options?</a></li>\n<li><a href=\"https://documentation.ordercloud.io/api-reference#Specs\">api reference for product specs</a></li>\n</ul>",
                    "<li><a href=\"https://documentation.ordercloud.io/use-case-guides/product-catalog-management/cpq-configure-price-quote\">need a refresher on product specs and spec options?</a></li>",
                    "<a href=\"https://documentation.ordercloud.io/use-case-guides/product-catalog-management/cpq-configure-price-quote\">need a refresher on product specs and spec options?</a>",
                    "<li><a href=\"https://documentation.ordercloud.io/api-reference#Specs\">api reference for product specs</a></li>",
                    "<a href=\"https://documentation.ordercloud.io/api-reference#Specs\">api reference for product specs</a>",
                    "<li>On <code>OrderSubmitted</code> <a href=\"https://github.com/ordercloud-api/mailchimp-email-templates\">Message Sender Mandrill Templates</a>, the order total merge variable was not accurately reflecting order total, leaving out promotion discount. This is now fixed. (The API model was never affected, only the Message Sender merge variable.)</li>",
                    "<code>OrderSubmitted</code>",
                    "<a href=\"https://github.com/ordercloud-api/mailchimp-email-templates\">Message Sender Mandrill Templates</a>",
                    "<li>We fixed a bad index that was causing massive performance problems for <code>DELETE</code>ing a Security Profile <em>assignment</em>. You should be able to go forth and delete to your hearts content now with no fear of the angry spinner!</li>",
                    "<code>DELETE</code>",
                    "<em>assignment</em>"
                ]
            }
        },
        {
            "Meta": {
                "Summary": "",
                "Released to Production": "2018-01-03 00:00 CDT",
                "Breaking Changes": false,
                "Version Number": "v1.0.66",
                "Date": "12/07/2017"
            },
            "Features": {
                "New Features": [
                    "<h3>Customized Platform Object ID Generation</h3>",
                    "<p>A big question we get from clients a lot is \"How can I make the OrderCloud API IDs work nicely with the IDs from my ERP or other internal systems?\". </p>",
                    "<p>Prior to API 1.0.66, you could either set the ID manually (which is a pain if you want incrementation to work well) or you could settle for the default platform random GUID, and keep track of your ERP integration ID in an <code>xp</code>, or some other work around.</p>",
                    "<code>xp</code>",
                    "<p>We've added a new feature that aims to make this process much, much simpler! <code>Incrementation Config</code> allows you to create a customized pattern for ID generation. </p>",
                    "<code>Incrementation Config</code>",
                    "<p><code>Incrementation Config</code></p>",
                    "<code>Incrementation Config</code>",
                    "<pre><code>{\n  \"ID\": \"\",\n  \"Name\": \"\",\n  \"LastNumber\": 0,\n  \"LeftPaddingCount\": 0\n}\n</code></pre>",
                    "<code>{\n  \"ID\": \"\",\n  \"Name\": \"\",\n  \"LastNumber\": 0,\n  \"LeftPaddingCount\": 0\n}\n</code>",
                    "<p>The important parts here are the <code>LastNumber</code> and the <code>LeftPaddingCount</code>. </p>",
                    "<code>LastNumber</code>",
                    "<code>LeftPaddingCount</code>",
                    "<h4>Examples:</h4>",
                    "<p><em>Objective:</em> Every order from a buyer should start with the buyer company's name, TestCorp, so that it can be differentiated easily by the supplier. The total number of characters for an ID can only be 20 characters long. (ex: <code>TestCorp-00000000001</code>)</p>",
                    "<em>Objective:</em>",
                    "<code>TestCorp-00000000001</code>",
                    "<ol>\n<li>Create the Incrementor Config </li>\n</ol>",
                    "<li>Create the Incrementor Config </li>",
                    "<p><code>POST /v1/incrementors/</code></p>",
                    "<code>POST /v1/incrementors/</code>",
                    "<pre><code>{\n  \"ID\": \"config01\",\n  \"Name\": \"Bob\",\n  \"LastNumber\": 0,\n  \"LeftPaddingCount\": 10 \n}\n</code></pre>",
                    "<code>{\n  \"ID\": \"config01\",\n  \"Name\": \"Bob\",\n  \"LastNumber\": 0,\n  \"LeftPaddingCount\": 10 \n}\n</code>",
                    "<ol>\n<li>Create the order using the Incrementor Config</li>\n</ol>",
                    "<li>Create the order using the Incrementor Config</li>",
                    "<p><code>POST /v1/orders/outgoing</code></p>",
                    "<code>POST /v1/orders/outgoing</code>",
                    "<pre><code>{\n    \"ID\":\"TestCorp-{config01}\"\n}\n</code></pre>",
                    "<code>{\n    \"ID\":\"TestCorp-{config01}\"\n}\n</code>",
                    "<p>returns as:</p>",
                    "<pre><code>{\n  \"ID\": \"TestCorp-00000000001\",\n...\n}\n</code></pre>",
                    "<code>{\n  \"ID\": \"TestCorp-00000000001\",\n...\n}\n</code>",
                    "<p>If you make another order with this Incrementor Config, you'll get <code>TestCorp-00000000002</code> and so on. </p>",
                    "<code>TestCorp-00000000002</code>",
                    "<p>This Incrementor Config can be used for both object creation, and <code>PATCH</code>/<code>PUT</code> updates. Additionally, once created, the Incrementor Config's <code>LastNumber</code> reflects the last number incremented to. So, if the last ID generated by <code>config01</code> was <code>TestCorp-00000000011</code>, the <code>LastNumber</code> for <code>config01</code> would be <code>11</code> at that moment.</p>",
                    "<code>PATCH</code>",
                    "<code>PUT</code>",
                    "<code>LastNumber</code>",
                    "<code>config01</code>",
                    "<code>TestCorp-00000000011</code>",
                    "<code>LastNumber</code>",
                    "<code>config01</code>",
                    "<code>11</code>",
                    "<h4>Caveats:</h4>",
                    "<p>1 - Left-padding does not represent a <em>maximum</em> value for the ID. If you have</p>",
                    "<em>maximum</em>",
                    "<pre><code>{\n  \"ID\": \"config01\",\n  \"Name\": \"Bob\",\n  \"LastNumber\": 0,\n  \"LeftPaddingCount\": 1 \n}\n</code></pre>",
                    "<code>{\n  \"ID\": \"config01\",\n  \"Name\": \"Bob\",\n  \"LastNumber\": 0,\n  \"LeftPaddingCount\": 1 \n}\n</code>",
                    "<p>when you get to 99, the ID will continue incrementing. If you're using it as in the above example, where your ERP expects ONLY x number of characters, this is going to cause some problems. </p>",
                    "<p>2 - While you <em>can</em> reuse the same incrementator on different endpoints -- such as using <code>config01</code> for both products and orders, for some reason -- the incrementation will be across <em>both</em> endpoints.</p>",
                    "<em>can</em>",
                    "<code>config01</code>",
                    "<em>both</em>",
                    "<p><em>EX:</em></p>",
                    "<em>EX:</em>",
                    "<pre><code>Order 1 with `config01` - `Order-00000000001`\nProduct 1 with `config01` - `Product-00000000002`\nOrder 1 with `config01` - `Order-00000000003`\nOrder 1 with `config01` - `Order-00000000004`\nOrder 1 with `config01` - `Order-00000000005`\nProduct 1 with `config01` - `Product-00000000006`\n</code></pre>",
                    "<code>Order 1 with `config01` - `Order-00000000001`\nProduct 1 with `config01` - `Product-00000000002`\nOrder 1 with `config01` - `Order-00000000003`\nOrder 1 with `config01` - `Order-00000000004`\nOrder 1 with `config01` - `Order-00000000005`\nProduct 1 with `config01` - `Product-00000000006`\n</code>",
                    "<p>3 - If you're not careful about how you handle your asynchronous API calls, it's much easier to accidentally try to create duplicate IDs. So be hygienic with your async calls! </p>",
                    "<p>4 - If you decide to reset the incrementor's <code>LastNumber</code>, you can end up trying to create duplicate IDs again. Be careful!</p>",
                    "<code>LastNumber</code>",
                    "<h3>Allowing a Buyer User to impersonate a Buyer User from a different company</h3>",
                    "<p>Now, instead of a Buyer User only being able to <a href=\"https://documentation.ordercloud.io/platform-guides/authentication/impersonation\">impersonate</a> a Buyer User within the same Buyer, a Buyer User can impersonate a Buyer User in a different Buyer, as long as they're within the same Seller organization. </p>",
                    "<a href=\"https://documentation.ordercloud.io/platform-guides/authentication/impersonation\">impersonate</a>",
                    "<p>This is useful if you have a customer user that works for multiple of your customers. This allows them to interact within those buyers uniquely, but maintain their user account easily.</p>",
                    "<h2>Bug Fixes</h2>",
                    "<h3>Duplicate Products returned in <code>ME</code> Product Lists</h3>",
                    "<code>ME</code>",
                    "<p>We've fixed a problem where, sometimes in very large catalogs with complicated category structures, a user using a <a href=\"\"><code>GET me/products</code> list</a> would return some duplicate products. This fix should also show some minor performance improvements for very large catalog list calls.</p>",
                    "<a href=\"\"><code>GET me/products</code> list</a>",
                    "<code>GET me/products</code>",
                    "<h3>Post-Submit Order Changes Triggered Promotion Evaluation</h3>",
                    "<p>Previously, if you tried to alter an order with a promotion after it had been submitted, and the promotion had expired, your alteration would throw an error. We've fixed this so that promotions are never evaluated after order submit now.</p>",
                    "<h3>Various performance improvements and other small bug fixes.</h3>",
                    "<p>What it says on the tin. </p>"
                ],
                "Bug Fixes": [
                    "<h3>Duplicate Products returned in <code>ME</code> Product Lists</h3>",
                    "<code>ME</code>",
                    "<p>We've fixed a problem where, sometimes in very large catalogs with complicated category structures, a user using a <a href=\"\"><code>GET me/products</code> list</a> would return some duplicate products. This fix should also show some minor performance improvements for very large catalog list calls.</p>",
                    "<a href=\"\"><code>GET me/products</code> list</a>",
                    "<code>GET me/products</code>",
                    "<h3>Post-Submit Order Changes Triggered Promotion Evaluation</h3>",
                    "<p>Previously, if you tried to alter an order with a promotion after it had been submitted, and the promotion had expired, your alteration would throw an error. We've fixed this so that promotions are never evaluated after order submit now.</p>",
                    "<h3>Various performance improvements and other small bug fixes.</h3>",
                    "<p>What it says on the tin. </p>"
                ]
            }
        }
    ]
}